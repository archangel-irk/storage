!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define(factory):"object"==typeof exports?exports.storage=factory():root.storage=factory()}(this,function(){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([/*!**********************!*\
  !*** ./lib/index.js ***!
  \**********************/
function(module,exports,__webpack_require__){(function(Buffer){"use strict";function Storage(){this.collectionNames=[]}/*!
	 * Storage documents using schema
	 * inspired by mongoose 3.8.4 (fixed bugs for 3.8.20)
	 *
	 * Storage implementation
	 * http://docs.meteor.com/#selectors
	 * https://github.com/meteor/meteor/tree/master/packages/minimongo
	 *
	 * проследить за багом gh-1638 (3.8.16)
	 */
/*!
	 * Module dependencies.
	 */
var Collection=__webpack_require__(/*! ./collection */1),Schema=__webpack_require__(/*! ./schema */2),SchemaType=__webpack_require__(/*! ./schematype */3),VirtualType=__webpack_require__(/*! ./virtualtype */4),Types=__webpack_require__(/*! ./types */11),Document=__webpack_require__(/*! ./document */5),utils=__webpack_require__(/*! ./utils */6),pkg=__webpack_require__(/*! json!../package.json */14);Storage.prototype.createCollection=function(name,schema,api){if(this[name])return console.info("storage::collection: `"+name+"` already exist"),this[name];if(null==name)throw new TypeError("storage.createCollection( name, schema ) - `name` must be exist, `schema` must be Schema instance");if(null==schema||"Schema"!==utils.getFunctionName(schema.constructor))throw new TypeError("storage.createCollection( name, schema ) - `schema` must be Schema instance");return this.collectionNames.push(name),this[name]=new Collection(name,schema,api),this[name]},Storage.prototype.addCollection=Storage.prototype.createCollection,Storage.prototype.getCollectionNames=function(){return this.collectionNames},Storage.prototype.Collection=Collection,Storage.prototype.version=pkg.version,Storage.prototype.Storage=Storage,Storage.prototype.Schema=Schema,Storage.prototype.SchemaType=SchemaType,Storage.prototype.SchemaTypes=Schema.Types,Storage.prototype.VirtualType=VirtualType,Storage.prototype.Types=Types,Storage.prototype.Document=Document,Storage.prototype.Error=__webpack_require__(/*! ./error */7),Storage.prototype.Deferred=__webpack_require__(/*! ./deferred */8),Storage.prototype.events=__webpack_require__(/*! ./events */9),Storage.prototype.StateMachine=__webpack_require__(/*! ./statemachine */10),Storage.prototype.utils=utils,Storage.prototype.ObjectId=Types.ObjectId,Storage.prototype.schemas=Schema.schemas,Storage.prototype.setAdapter=function(adapterHooks){Document.prototype.adapterHooks=adapterHooks},/*!
	 * The exports object is an instance of Storage.
	 *
	 * @api public
	 */
module.exports=new Storage,window.Buffer=Buffer}).call(exports,__webpack_require__(/*! (webpack)/~/node-libs-browser/~/buffer/index.js */12).Buffer)},/*!***************************!*\
  !*** ./lib/collection.js ***!
  \***************************/
function(module,exports,__webpack_require__){"use strict";function Collection(name,schema,api){this.name=name,this.documents={},!_.isObject(schema)||schema instanceof Schema||(schema=new Schema(schema)),this.api=api,this.schema=schema,this.array=[],window.ko&&ko.track(this,["array"])}/*!
	 * Module dependencies.
	 */
var Schema=__webpack_require__(/*! ./schema */2),Document=__webpack_require__(/*! ./document */5);Collection.prototype={add:function(doc,fields,init,_storageWillMutate){var self=this;if(null==doc&&(doc=null),_.isArray(doc)){var savedDocs=[];return _.each(doc,function(doc){savedDocs.push(self.add(doc,fields,init,!0))}),this.storageHasMutated(),savedDocs}var id=doc&&doc._id;if(id&&this.documents[id])this.documents[id].set(doc);else{var schema,discriminatorMapping=this.schema?this.schema.discriminatorMapping:null,key=discriminatorMapping&&discriminatorMapping.isRoot?discriminatorMapping.key:null;schema=key&&doc&&doc[key]&&this.schema.discriminators&&this.schema.discriminators[doc[key]]?this.schema.discriminators[doc[key]]:this.schema;var newDoc=new Document(doc,this.name,schema,fields,init);/*!
	      if ( !newDoc._id ){
	        throw new TypeError('Для помещения в коллекцию необходимо, чтобы у документа был _id');
	      }
	      */
id=newDoc._id.toString(),this.documents[id]=newDoc}return _storageWillMutate||this.storageHasMutated(),this.documents[id]},remove:function(document){return delete this.documents[document._id||document]},find:function(conditions){return _.where(this.documents,conditions)},findById:function(_id){return this.documents[_id]},findByIdAndRemove:function(_id){return this.remove(this.findById(_id)),this},findByIdAndUpdate:function(_id,path,value){return this.update(this.findById(_id),path,value)},findOne:function(conditions){return _.findWhere(this.documents,conditions)},findOneAndRemove:function(conditions){return this.remove(this.findOne(conditions)),this},findOneAndUpdate:function(conditions,path,value){return this.update(this.findOne(conditions),path,value)},update:function(document,path,value){var doc=this.documents[document._id||document];return null==doc?(console.warn("storage::update: Document is not found."),!1):doc.set(path,value)},storageHasMutated:function(){this.array=_.toArray(this.documents)},updateIdLink:function(doc){var id=doc._id.toString(),oldId=_.findKey(this.documents,{_id:doc._id});if(!oldId)throw new TypeError("Не найден документ для обновления ссылки по этому _id: "+id);delete this.documents[oldId],this.documents[id]=doc}},/*!
	 * Module exports.
	 */
module.exports=Collection},/*!***********************!*\
  !*** ./lib/schema.js ***!
  \***********************/
function(module,exports,__webpack_require__){"use strict";function Schema(name,baseSchema,obj,options){if(!(this instanceof Schema))return new Schema(name,baseSchema,obj,options);"string"==typeof name?(this.name=name,schemas[name]=this):(options=obj,obj=baseSchema,baseSchema=name,name=void 0),baseSchema instanceof Schema||(options=obj,obj=baseSchema,baseSchema=void 0),this.paths={},this.subpaths={},this.virtuals={},this.nested={},this.inherits={},this.callQueue=[],this.methods={},this.statics={},this.tree={},this._requiredpaths=void 0,this.discriminatorMapping=void 0,this.options=this.defaultOptions(options),baseSchema instanceof Schema&&baseSchema.discriminator(name,this),obj&&this.add(obj);var _idSubDoc=obj&&obj._id&&_.isObject(obj._id),auto_id=!this.paths._id&&!this.options.noId&&this.options._id&&!_idSubDoc;auto_id&&this.add({_id:{type:Schema.ObjectId,auto:!0}});var autoid=!this.paths.id&&this.options.id;autoid&&this.virtual("id").get(idGetter)}/*!
	 * Returns this documents _id cast to a string.
	 */
function idGetter(){return this.$__._id?this.$__._id:(this.$__._id=null==this._id?null:String(this._id),this.$__._id)}/*!
	 * ignore
	 */
function getPositionalPath(self,path){var subpaths=path.split(/\.(\d+)\.|\.(\d+)$/).filter(Boolean);if(subpaths.length<2)return self.paths[subpaths[0]];var val=self.path(subpaths[0]);if(!val)return val;for(var subpath,last=subpaths.length-1,i=1;i<subpaths.length;++i){if(subpath=subpaths[i],i===last&&val&&!val.schema&&!/\D/.test(subpath)){val=val instanceof Types.Array?val.caster:void 0;break}if(/\D/.test(subpath)){if(!val||!val.schema){val=void 0;break}val=val.schema.path(subpath)}}return self.subpaths[path]=val,self.subpaths[path]}/*!
	 * Module dependencies.
	 */
var Types,schemas,Events=__webpack_require__(/*! ./events */9),VirtualType=__webpack_require__(/*! ./virtualtype */4),utils=__webpack_require__(/*! ./utils */6);/*!
	 * Inherit from EventEmitter.
	 */
Schema.prototype=Object.create(Events.prototype),Schema.prototype.constructor=Schema,Schema.prototype.paths,Schema.prototype.tree,Schema.prototype.defaultOptions=function(options){return options=_.assign({strict:!0,versionKey:"__v",discriminatorKey:"__t",minimize:!0,_id:!0,id:!0},options)},Schema.prototype.add=function(obj,prefix){prefix=prefix||"";for(var keys=Object.keys(obj),i=0;i<keys.length;++i){var key=keys[i];if(null==obj[key])throw new TypeError("Invalid value for schema path `"+prefix+key+"`");!_.isPlainObject(obj[key])||obj[key].constructor&&"Object"!==utils.getFunctionName(obj[key].constructor)||obj[key].type&&!obj[key].type.type?this.path(prefix+key,obj[key]):Object.keys(obj[key]).length?(this.nested[prefix+key]=!0,this.add(obj[key],prefix+key+".")):this.path(prefix+key,obj[key])}},Schema.reserved=Object.create(null);var reserved=Schema.reserved;reserved.on=reserved.get=reserved.set=reserved.init=reserved.isNew=reserved.errors=reserved.schema=reserved.options=reserved.toObject=reserved.trigger=reserved.off=reserved._events=Schema.prototype.path=function(path,obj){if(void 0===obj)return this.paths[path]?this.paths[path]:this.subpaths[path]?this.subpaths[path]:/\.\d+\.?.*$/.test(path)?getPositionalPath(this,path):void 0;if(reserved[path])throw new Error("`"+path+"` may not be used as a schema pathname");var subpaths=path.split(/\./),last=subpaths.pop(),branch=this.tree;return subpaths.forEach(function(sub,i){if(branch[sub]||(branch[sub]={}),"object"!=typeof branch[sub]){var msg="Cannot set nested path `"+path+"`. Parent path `"+subpaths.slice(0,i).concat([sub]).join(".")+"` already set to type "+branch[sub].name+".";throw new Error(msg)}branch=branch[sub]}),branch[last]=utils.clone(obj),this.paths[path]=Schema.interpretAsType(path,obj),this},Schema.interpretAsType=function(path,obj){var constructorName=utils.getFunctionName(obj.constructor);"Object"!==constructorName&&(obj={type:obj});var type=obj.type&&!obj.type.type?obj.type:{};if("Object"===utils.getFunctionName(type.constructor)||"mixed"==type)return new Types.Mixed(path,obj);if(Array.isArray(type)||Array==type||"array"==type){var cast=Array==type||"array"==type?obj.cast:type[0];if(cast instanceof Schema)return new Types.DocumentArray(path,cast,obj);if("string"==typeof cast)cast=Types[cast.charAt(0).toUpperCase()+cast.substring(1)];else if(cast&&(!cast.type||cast.type.type)&&"Object"===utils.getFunctionName(cast.constructor)&&Object.keys(cast).length)return new Types.DocumentArray(path,new Schema(cast),obj);return new Types.Array(path,cast||Types.Mixed,obj)}var name="string"==typeof type?type:utils.getFunctionName(type);if(name&&(name=name.charAt(0).toUpperCase()+name.substring(1)),void 0==Types[name])throw new TypeError("Undefined type at `"+path+"`\n  Did you try nesting Schemas? You can only nest using refs or arrays.");return new Types[name](path,obj)},Schema.prototype.eachPath=function(fn){for(var keys=Object.keys(this.paths),len=keys.length,i=0;len>i;++i)fn(keys[i],this.paths[keys[i]]);return this},Schema.prototype.requiredPaths=function(){if(this._requiredpaths)return this._requiredpaths;for(var paths=Object.keys(this.paths),i=paths.length,ret=[];i--;){var path=paths[i];this.paths[path].isRequired&&ret.push(path)}return this._requiredpaths=ret,this._requiredpaths},Schema.prototype.pathType=function(path){return path in this.paths?"real":path in this.virtuals?"virtual":path in this.nested?"nested":path in this.subpaths?"real":/\.\d+\.|\.\d+$/.test(path)&&getPositionalPath(this,path)?"real":"adhocOrUndefined"},Schema.prototype.queue=function(name,args){return this.callQueue.push([name,args]),this},Schema.prototype.pre=function(){return this.queue("pre",arguments)},Schema.prototype.post=function(method,fn){return this.queue("on",arguments)},Schema.prototype.plugin=function(fn,opts){return fn(this,opts),this},Schema.prototype.method=function(name,fn){if("string"!=typeof name)for(var i in name)this.methods[i]=name[i];else this.methods[name]=fn;return this},Schema.prototype["static"]=function(name,fn){if("string"!=typeof name)for(var i in name)this.statics[i]=name[i];else this.statics[name]=fn;return this},Schema.prototype.set=function(key,value){return 1===arguments.length?this.options[key]:(this.options[key]=value,this)},Schema.prototype.get=function(key){return this.options[key]},Schema.prototype.virtual=function(name,options){var virtuals=this.virtuals,parts=name.split(".");return virtuals[name]=parts.reduce(function(mem,part,i){return mem[part]||(mem[part]=i===parts.length-1?new VirtualType(options,name):{}),mem[part]},this.tree),virtuals[name]},Schema.prototype.virtualpath=function(name){return this.virtuals[name]},Schema.discriminators,Schema.prototype.discriminator=function(name,schema){if(!(schema instanceof Schema))throw new Error("You must pass a valid discriminator Schema");if(this.discriminatorMapping&&!this.discriminatorMapping.isRoot)throw new Error('Discriminator "'+name+'" can only be a discriminator of the root model');var key=this.options.discriminatorKey;if(schema.path(key))throw new Error('Discriminator "'+name+'" cannot have field with name "'+key+'"');if(function(schema,baseSchema){utils.merge(schema,baseSchema);var obj={};obj[key]={type:String,"default":name},schema.add(obj),schema.discriminatorMapping={key:key,value:name,isRoot:!1},function(a,b){if(a=utils.clone(a),b=utils.clone(b),delete a.toJSON,delete a.toObject,delete b.toJSON,delete b.toObject,!utils.deepEqual(a,b))throw new Error("Discriminator options are not customizable (except toJSON & toObject)")}(schema.options,baseSchema.options);var toJSON=schema.options.toJSON,toObject=schema.options.toObject;schema.options=utils.clone(baseSchema.options),toJSON&&(schema.options.toJSON=toJSON),toObject&&(schema.options.toObject=toObject),schema._requiredpaths=void 0}(schema,this),this.discriminators||(this.discriminators={}),this.discriminatorMapping||(this.discriminatorMapping={key:key,value:null,isRoot:!0}),this.discriminators[name])throw new Error('Discriminator with name "'+name+'" already exists');this.discriminators[name]=schema;for(var m in this.methods)schema.methods[m]=this.methods[m];for(var s in this.statics)schema.statics[s]=this.methods[s];return this.discriminators[name]},/*!
	 * exports
	 */
module.exports=Schema,window.Schema=Schema,Schema.Types=__webpack_require__(/*! ./schema/index */13),Schema.schemas=schemas={},/*!
	 * ignore
	 */
Types=Schema.Types,Schema.ObjectId=Types.ObjectId},/*!***************************!*\
  !*** ./lib/schematype.js ***!
  \***************************/
function(module,exports,__webpack_require__){"use strict";function SchemaType(path,options,instance){this.path=path,this.instance=instance,this.validators=[],this.setters=[],this.getters=[],this.options=options;for(var i in options)if(this[i]&&"function"==typeof this[i]){var opts=Array.isArray(options[i])?options[i]:[options[i]];this[i].apply(this,opts)}}/*!
	 * Module dependencies.
	 */
var error=__webpack_require__(/*! ./error */7),utils=__webpack_require__(/*! ./utils */6),errorMessages=error.messages,CastError=error.CastError,ValidatorError=error.ValidatorError;SchemaType.prototype["default"]=function(val){return 1===arguments.length?(this.defaultValue="function"==typeof val?val:this.cast(val),this):(arguments.length>1&&(this.defaultValue=_.toArray(arguments)),this.defaultValue)},SchemaType.prototype.set=function(fn){if("function"!=typeof fn)throw new TypeError("A setter must be a function.");return this.setters.push(fn),this},SchemaType.prototype.get=function(fn){if("function"!=typeof fn)throw new TypeError("A getter must be a function.");return this.getters.push(fn),this},SchemaType.prototype.validate=function(obj,message,type){if("function"==typeof obj||obj&&"RegExp"===utils.getFunctionName(obj.constructor))return message||(message=errorMessages.general["default"]),type||(type="user defined"),this.validators.push([obj,message,type]),this;for(var arg,i=arguments.length;i--;){if(arg=arguments[i],!arg||"Object"!==utils.getFunctionName(arg.constructor)){var msg="Invalid validator. Received ("+typeof arg+") "+arg+". See http://mongoosejs.com/docs/api.html#schematype_SchemaType-validate";throw new Error(msg)}this.validate(arg.validator,arg.msg,arg.type)}return this},SchemaType.prototype.required=function(required,message){if(!1===required)return this.validators=this.validators.filter(function(v){return v[0]!=this.requiredValidator},this),this.isRequired=!1,this;var self=this;this.isRequired=!0,this.requiredValidator=function(v){return void 0!==this&&"isSelected"in this&&!this.isSelected(self.path)&&!this.isModified(self.path)?!0:self.checkRequired(v,this)},"string"==typeof required&&(message=required,required=void 0);var msg=message||errorMessages.general.required;return this.validators.push([this.requiredValidator,msg,"required"]),this},SchemaType.prototype.getDefault=function(scope,init){var ret="function"==typeof this.defaultValue?this.defaultValue.call(scope):this.defaultValue;return null!==ret&&void 0!==ret?this.cast(ret,scope,init):ret},SchemaType.prototype.applySetters=function(value,scope,init,priorVal){if(SchemaType._isRef(this,value))return init?value:this.cast(value,scope,init,priorVal);var v=value,setters=this.setters,len=setters.length,caster=this.caster;if(Array.isArray(v)&&caster&&caster.setters)for(var i=0;i<v.length;i++)v[i]=caster.applySetters(v[i],scope,init,priorVal);if(!len)return null===v||void 0===v?v:this.cast(v,scope,init,priorVal);for(;len--;)v=setters[len].call(scope,v,this);return null===v||void 0===v?v:v=this.cast(v,scope,init,priorVal)},SchemaType.prototype.applyGetters=function(value,scope){if(SchemaType._isRef(this,value))return value;var v=value,getters=this.getters,len=getters.length;if(!len)return v;for(;len--;)v=getters[len].call(scope,v,this);return v},SchemaType.prototype.doValidate=function(value,callback,scope){function validate(ok,message,type,val){err||(void 0===ok||ok?--count||callback(null):callback(err=new ValidatorError(path,message,type,val)))}var err=!1,path=this.path,count=this.validators.length;return count?void this.validators.forEach(function(v){var validator=v[0],message=v[1],type=v[2];validator instanceof RegExp?validate(validator.test(value),message,type,value):"function"==typeof validator&&(2===validator.length?validator.call(scope,value,function(ok){validate(ok,message,type,value)}):validate(validator.call(scope,value),message,type,value))}):callback(null)},SchemaType._isRef=function(self,value){var ref=self.options&&self.options.ref;if(ref){if(null==value)return!0;if(_.isObject(value))return!0}return!1},/*!
	 * Module exports.
	 */
module.exports=SchemaType,SchemaType.CastError=CastError,SchemaType.ValidatorError=ValidatorError},/*!****************************!*\
  !*** ./lib/virtualtype.js ***!
  \****************************/
function(module,exports,__webpack_require__){"use strict";function VirtualType(options,name){this.path=name,this.getters=[],this.setters=[],this.options=options||{}}VirtualType.prototype.get=function(fn){return this.getters.push(fn),this},VirtualType.prototype.set=function(fn){return this.setters.push(fn),this},VirtualType.prototype.applyGetters=function(value,scope){for(var v=value,l=this.getters.length-1;l>=0;l--)v=this.getters[l].call(scope,v,this);return v},VirtualType.prototype.applySetters=function(value,scope){for(var v=value,l=this.setters.length-1;l>=0;l--)v=this.setters[l].call(scope,v,this);return v},/*!
	 * exports
	 */
module.exports=VirtualType},/*!*************************!*\
  !*** ./lib/document.js ***!
  \*************************/
function(module,exports,__webpack_require__){"use strict";function Document(data,collectionName,schema,fields,init){if(!(this instanceof Document))return new Document(data,collectionName,schema,fields,init);if(this.$__=new InternalCache,this.isNew=!0,"boolean"==typeof data&&(init=data,data=null),collectionName instanceof Schema&&(schema=collectionName,collectionName=void 0),!_.isObject(schema)||schema instanceof Schema||(schema=new Schema(schema)),data instanceof Schema?(schema=data,data=null,schema.options._id&&(data={_id:new ObjectId})):(schema=this.schema||schema,schema&&!this.schema&&schema.options._id&&(data=data||{},void 0===data._id&&(data._id=new ObjectId))),!schema)throw new StorageError.MissingSchemaError;"boolean"==typeof collectionName&&(init=collectionName,collectionName=void 0),"boolean"==typeof fields?(this.$__.strictMode=fields,fields=void 0):(this.$__.strictMode=schema.options&&schema.options.strict,this.$__.selected=fields),this.schema=schema,collectionName&&(this.collection=window.storage[collectionName],this.collectionName=collectionName);for(var required=schema.requiredPaths(),i=0;i<required.length;++i)this.$__.activePaths.require(required[i]);if(this.$__setSchema(schema),this._doc=this.$__buildDoc(data,init),init?this.init(data):data&&this.set(data,void 0,!0),schema.options.strict===!1&&data){var self=this,keys=Object.keys(this._doc);keys.forEach(function(key){key in schema.tree||defineProp(self,key,null,self)})}for(var m in schema.methods)this[m]=schema.methods[m];for(var s in schema.statics)this[s]=schema.statics[s]}/*!
	 * Init helper.
	 *
	 * @param {Object} self document instance
	 * @param {Object} obj raw server doc
	 * @param {Object} doc object we are initializing
	 * @api private
	 */
function init(self,obj,doc,prefix){prefix=prefix||"";for(var schema,path,i,keys=Object.keys(obj),len=keys.length;len--;)i=keys[len],path=prefix+i,schema=self.schema.path(path),schema||!_.isPlainObject(obj[i])||obj[i].constructor&&"Object"!==utils.getFunctionName(obj[i].constructor)?(null===obj[i]?doc[i]=null:void 0!==obj[i]&&(schema?self.$__try(function(){doc[i]=schema.cast(obj[i],self,!0)}):doc[i]=obj[i],self.adapterHooks.documentSetInitialValue.call(self,self,path,doc[i])),self.$__.activePaths.init(path)):(doc[i]||(doc[i]={}),init(self,obj[i],doc[i],path+"."))}/*!
	 * Compiles schemas.
	 * (установить геттеры/сеттеры на поля документа)
	 */
function compile(self,tree,proto,prefix){for(var limb,key,keys=Object.keys(tree),i=keys.length;i--;)key=keys[i],limb=tree[key],defineProp(self,key,"Object"!==utils.getFunctionName(limb.constructor)||!Object.keys(limb).length||limb.type&&!limb.type.type?null:limb,proto,prefix,keys)}function getOwnPropertyDescriptors(object){var result={};return Object.getOwnPropertyNames(object).forEach(function(key){result[key]=Object.getOwnPropertyDescriptor(object,key),result[key].enumerable=!1}),result}/*!
	 * Defines the accessor named prop on the incoming prototype.
	 * там же, поля документа сделаем наблюдаемыми
	 */
function defineProp(self,prop,subprops,prototype,prefix,keys){prefix=prefix||"";var path=(prefix?prefix+".":"")+prop;subprops?Object.defineProperty(prototype,prop,{enumerable:!0,configurable:!0,get:function(){if(this.$__.getters||(this.$__.getters={}),!this.$__.getters[path]){var nested=Object.create(Object.getPrototypeOf(this),getOwnPropertyDescriptors(this));prefix||(nested.$__.scope=this);for(var i=0,len=keys.length;len>i;++i)Object.defineProperty(nested,keys[i],{enumerable:!1,writable:!0,configurable:!0,value:void 0});nested.toObject=function(){return this.get(path)},compile(self,subprops,nested,path),this.$__.getters[path]=nested}return this.$__.getters[path]},set:function(v){return v instanceof Document&&(v=v.toObject()),(this.$__.scope||this).set(path,v)}}):Object.defineProperty(prototype,prop,{enumerable:!0,configurable:!0,get:function(){return this.get.call(this.$__.scope||this,path)},set:function(v){return this.set.call(this.$__.scope||this,path,v)}}),self.adapterHooks.documentDefineProperty.call(self,self,prototype,prop,prefix,path)}/*!
	 * Minimizes an object, removing undefined values and empty objects
	 *
	 * @param {Object} object to minimize
	 * @return {Object}
	 */
function minimize(obj){for(var hasKeys,key,val,keys=Object.keys(obj),i=keys.length;i--;)key=keys[i],val=obj[key],_.isPlainObject(val)&&(obj[key]=minimize(val)),void 0!==obj[key]?hasKeys=!0:delete obj[key];return hasKeys?obj:void 0}/*!
	 * Applies virtuals properties to `json`.
	 *
	 * @param {Document} self
	 * @param {Object} json
	 * @param {String} type either `virtuals` or `paths`
	 * @return {Object} `json`
	 */
function applyGetters(self,json,type,options){for(var path,schema=self.schema,paths=Object.keys(schema[type]),i=paths.length;i--;){path=paths[i];for(var part,parts=path.split("."),plen=parts.length,last=plen-1,branch=json,ii=0;plen>ii;++ii)part=parts[ii],ii===last?branch[part]=utils.clone(self.get(path),options):branch=branch[part]||(branch[part]={})}return json}/*!
	 * Module dependencies.
	 */
var DocumentArray,Embedded,Events=__webpack_require__(/*! ./events */9),StorageError=__webpack_require__(/*! ./error */7),MixedSchema=__webpack_require__(/*! ./schema/mixed */15),ObjectId=__webpack_require__(/*! ./types/objectid */16),Schema=__webpack_require__(/*! ./schema */2),ValidatorError=__webpack_require__(/*! ./schematype */3).ValidatorError,Deferred=__webpack_require__(/*! ./deferred */8),utils=__webpack_require__(/*! ./utils */6),clone=utils.clone,ValidationError=StorageError.ValidationError,InternalCache=__webpack_require__(/*! ./internal */17),deepEqual=utils.deepEqual;/*!
	 * Inherits from EventEmitter.
	 */
Document.prototype=Object.create(Events.prototype),Document.prototype.constructor=Document,Document.prototype.schema,Document.prototype.isNew,Document.prototype.id,Document.prototype.errors,Document.prototype.adapterHooks={documentDefineProperty:_.noop,documentSetInitialValue:_.noop,documentGetValue:_.noop,documentSetValue:_.noop},Document.prototype.$__buildDoc=function(obj,skipId){for(var doc={},self=this,paths=Object.keys(this.schema.paths),plen=paths.length,ii=0;plen>ii;++ii){var p=paths[ii];if("_id"===p){if(skipId)continue;if(obj&&"_id"in obj)continue}for(var type=this.schema.paths[p],path=p.split("."),len=path.length,last=len-1,doc_=doc,i=0;len>i;++i){var defaultVal,piece=path[i];i===last?(defaultVal=type.getDefault(self,!0),"undefined"!=typeof defaultVal&&(doc_[piece]=defaultVal,self.$__.activePaths["default"](p))):doc_=doc_[piece]||(doc_[piece]={})}}return doc},Document.prototype.init=function(data){/*!
	  if ( doc._id && opts && opts.populated && opts.populated.length ) {
	    var id = String( doc._id );
	    for (var i = 0; i < opts.populated.length; ++i) {
	      var item = opts.populated[ i ];
	      this.populated( item.path, item._docs[id], item );
	    }
	  }
	  */
return this.isNew=!1,init(this,data,this._doc),this},Document.prototype.set=function(path,val,type,options){type&&"Object"===utils.getFunctionName(type.constructor)&&(options=type,type=void 0);var adhocs,merge=options&&options.merge,adhoc=type&&!0!==type,constructing=!0===type,strict=options&&"strict"in options?options.strict:this.$__.strictMode;if(adhoc&&(adhocs=this.$__.adhocPaths||(this.$__.adhocPaths={}),adhocs[path]=Schema.interpretAsType(path,type)),"string"!=typeof path){if(null!==path&&void 0!==path){var prefix=val?val+".":"";path instanceof Document&&(path=path._doc);for(var pathtype,key,keys=Object.keys(path),i=keys.length;i--;)if(key=keys[i],pathtype=this.schema.pathType(prefix+key),null==path[key]||!_.isPlainObject(path[key])||path[key].constructor&&"Object"!==utils.getFunctionName(path[key].constructor)||"virtual"===pathtype||this.$__path(prefix+key)instanceof MixedSchema||this.schema.paths[key]&&this.schema.paths[key].options.ref)if(strict){if("real"===pathtype||"virtual"===pathtype)this.set(prefix+key,path[key],constructing);else if("throw"===strict)throw new Error("Field `"+key+"` is not in schema.")}else void 0!==path[key]&&this.set(prefix+key,path[key],constructing);else this.set(path[key],prefix+key,constructing);return this}var _temp=path;path=val,val=_temp}var pathType=this.schema.pathType(path);if("nested"===pathType&&val&&_.isPlainObject(val)&&(!val.constructor||"Object"===utils.getFunctionName(val.constructor)))return merge||this.setValue(path,null),this.set(val,path,constructing),this;var schema,subpath,parts=path.split(".");if("adhocOrUndefined"===pathType&&strict){for(var mixed,i=0;i<parts.length;++i)if(subpath=parts.slice(0,i+1).join("."),schema=this.schema.path(subpath),schema instanceof MixedSchema){mixed=!0;break}if(!mixed){if("throw"===strict)throw new Error("Field `"+path+"` is not in schema.");return this}}else{if("virtual"===pathType)return schema=this.schema.virtualpath(path),schema.applySetters(val,this),this;schema=this.$__path(path)}var pathToMark;if(parts.length<=1)pathToMark=path;else{for(i=0;i<parts.length;++i)if(subpath=parts.slice(0,i+1).join("."),this.isDirectModified(subpath)||null===this.get(subpath)){pathToMark=subpath;break}pathToMark||(pathToMark=path)}var priorVal=constructing?void 0:this.getValue(path);if(!schema||void 0===val)return this.$__set(pathToMark,path,constructing,parts,schema,val,priorVal),this;var self=this,shouldSet=this.$__try(function(){val=schema.applySetters(val,self,!1,priorVal)});return shouldSet&&this.$__set(pathToMark,path,constructing,parts,schema,val,priorVal),this},Document.prototype.$__shouldModify=function(pathToMark,path,constructing,parts,schema,val,priorVal){return this.isNew?!0:void 0!==val||this.isSelected(path)?void 0===val&&path in this.$__.activePaths.states["default"]?!1:utils.deepEqual(val,priorVal||this.get(path))?!1:!0:!0},Document.prototype.$__set=function(pathToMark,path,constructing,parts,schema,val,priorVal){var shouldModify=this.$__shouldModify.apply(this,arguments);shouldModify&&this.markModified(pathToMark,val);for(var obj=this._doc,i=0,l=parts.length;l>i;i++){var next=i+1,last=next===l;last?(obj[parts[i]]=val,this.adapterHooks.documentSetValue.call(this,this,path,val)):obj=obj[parts[i]]&&"Object"===utils.getFunctionName(obj[parts[i]].constructor)?obj[parts[i]]:obj[parts[i]]&&"EmbeddedDocument"===utils.getFunctionName(obj[parts[i]].constructor)?obj[parts[i]]:obj[parts[i]]&&Array.isArray(obj[parts[i]])?obj[parts[i]]:obj[parts[i]]={}}},Document.prototype.getValue=function(path){return utils.getValue(path,this._doc)},Document.prototype.setValue=function(path,value){return utils.setValue(path,value,this._doc),this},Document.prototype.get=function(path,type){var adhocs;type&&(adhocs=this.$__.adhocPaths||(this.$__.adhocPaths={}),adhocs[path]=Schema.interpretAsType(path,type));for(var schema=this.$__path(path)||this.schema.virtualpath(path),pieces=path.split("."),obj=this._doc,i=0,l=pieces.length;l>i;i++)obj=void 0===obj||null===obj?void 0:obj[pieces[i]];return schema&&(obj=schema.applyGetters(obj,this)),this.adapterHooks.documentGetValue.call(this,this,path),obj},Document.prototype.$__path=function(path){var adhocs=this.$__.adhocPaths,adhocType=adhocs&&adhocs[path];return adhocType?adhocType:this.schema.path(path)},Document.prototype.markModified=function(path){this.$__.activePaths.modify(path)},Document.prototype.$__try=function(fn,scope){var res;try{fn.call(scope),res=!0}catch(e){this.$__error(e),res=!1}return res},Document.prototype.modifiedPaths=function(){var directModifiedPaths=Object.keys(this.$__.activePaths.states.modify);return directModifiedPaths.reduce(function(list,path){var parts=path.split(".");return list.concat(parts.reduce(function(chains,part,i){return chains.concat(parts.slice(0,i).concat(part).join("."))},[]))},[])},Document.prototype.isModified=function(path){return path?!!~this.modifiedPaths().indexOf(path):this.$__.activePaths.some("modify")},Document.prototype.isDirectModified=function(path){return path in this.$__.activePaths.states.modify},Document.prototype.isInit=function(path){return path in this.$__.activePaths.states.init},Document.prototype.isSelected=function(path){if(this.$__.selected){if("_id"===path)return 0!==this.$__.selected._id;var cur,paths=Object.keys(this.$__.selected),i=paths.length,inclusive=!1;if(1===i&&"_id"===paths[0])return 0===this.$__.selected._id;for(;i--;)if(cur=paths[i],"_id"!==cur){inclusive=!!this.$__.selected[cur];break}if(path in this.$__.selected)return inclusive;i=paths.length;for(var pathDot=path+".";i--;)if(cur=paths[i],"_id"!==cur){if(0===cur.indexOf(pathDot))return inclusive;if(0===pathDot.indexOf(cur+"."))return inclusive}return!inclusive}return!0},Document.prototype.validate=function(cb){function validatePath(path){validating[path]||(validating[path]=!0,total++,utils.setImmediate(function(){var p=self.schema.path(path);if(!p)return--total||complete();var val=self.getValue(path);p.doValidate(val,function(err){err&&self.invalidate(path,err,void 0),--total||complete()},self)}))}function complete(){var err=self.$__.validationError;self.$__.validationError=void 0,cb&&cb(err)}var self=this,paths=Object.keys(this.$__.activePaths.states.require).filter(function(path){return self.isSelected(path)||self.isModified(path)?!0:!1});if(paths=paths.concat(Object.keys(this.$__.activePaths.states.init)),paths=paths.concat(Object.keys(this.$__.activePaths.states.modify)),paths=paths.concat(Object.keys(this.$__.activePaths.states["default"])),0===paths.length)return complete(),this;var validating={},total=0;return paths.forEach(validatePath),this},Document.prototype.invalidate=function(path,errorMsg,value){this.$__.validationError||(this.$__.validationError=new ValidationError(this)),errorMsg&&"string"!=typeof errorMsg||(errorMsg=new ValidatorError(path,errorMsg,"user defined",value)),this.$__.validationError!==errorMsg&&(this.$__.validationError.errors[path]=errorMsg)},Document.prototype.$__reset=function(){var self=this;return this.$__.activePaths.map("init","modify",function(i){return self.getValue(i)}).filter(function(val){return val&&val.isStorageDocumentArray&&val.length}).forEach(function(array){for(var i=array.length;i--;){var doc=array[i];doc&&doc.$__reset()}}),this.$__.activePaths.clear("modify"),this.$__.validationError=void 0,this.errors=void 0,this.schema.requiredPaths().forEach(function(path){self.$__.activePaths.require(path)}),this},Document.prototype.$__dirty=function(){var self=this,all=this.$__.activePaths.map("modify",function(path){return{path:path,value:self.getValue(path),schema:self.$__path(path)}});all.sort(function(a,b){return a.path<b.path?-1:a.path>b.path?1:0});var lastPath,top,minimal=[];return all.forEach(function(item){lastPath=item.path+".",minimal.push(item),top=item}),top=lastPath=null,minimal},Document.prototype.$__setSchema=function(schema){this.schema=schema,compile(this,schema.tree,this)},Document.prototype.$__getAllSubdocs=function(){function docReducer(seed,path){var val=this[path];return val instanceof Embedded&&seed.push(val),val instanceof DocumentArray&&val.forEach(function(doc){doc&&doc._doc&&(doc instanceof Embedded&&seed.push(doc),seed=Object.keys(doc._doc).reduce(docReducer.bind(doc._doc),seed))}),seed}/*! ./types/documentarray */
/*! ./types/embedded */
return DocumentArray||(DocumentArray=__webpack_require__(18)),Embedded=Embedded||__webpack_require__(19),Object.keys(this._doc).reduce(docReducer.bind(this),[])},Document.prototype.$__presaveValidate=function(){var docs=this.$__getArrayPathsToValidate(),e2=docs.map(function(doc){return doc.$__presaveValidate()}),e1=[this.$__.saveError].concat(e2),err=e1.filter(function(x){return x})[0];return this.$__.saveError=null,err},Document.prototype.$__getArrayPathsToValidate=function(){/*! ./types/documentarray */
return DocumentArray||(DocumentArray=__webpack_require__(18)),this.$__.activePaths.map("init","modify",function(i){return this.getValue(i)}.bind(this)).filter(function(val){return val&&val instanceof DocumentArray&&val.length}).reduce(function(seed,array){return seed.concat(array)},[]).filter(function(doc){return doc})},Document.prototype.$__error=function(err){return this.$__.saveError=err,this},Document.prototype.$__delta=function(){for(var dirty=this.$__dirty(),delta={},len=dirty.length,d=0;len>d;++d){var data=dirty[d],value=data.value;value=utils.clone(value,{depopulate:1}),delta[data.path]=value}return delta},Document.prototype.$__handleSave=function(){var resource;this.collection&&(resource=this.collection.api);var innerPromise=new Deferred;if(this.isNew){var toObjectOptions={};this.schema.options.toObject&&this.schema.options.toObject.retainKeyOrder&&(toObjectOptions.retainKeyOrder=!0),toObjectOptions.depopulate=1;var obj=this.toObject(toObjectOptions);if((obj||{}).hasOwnProperty("_id")===!1)return innerPromise.reject(new Error("document must have an _id before saving")),innerPromise;resource?resource.create(obj).always(innerPromise.resolve):innerPromise.resolve(obj),this.$__reset(),this.isNew=!1,this.trigger("isNew",!1),this.$__.inserting=!0}else{this.$__.inserting=!1;var delta=this.$__delta();_.isEmpty(delta)?(this.$__reset(),innerPromise.resolve(this)):(this.$__reset(),resource?resource(this.id).update(delta).always(innerPromise.resolve):innerPromise.resolve(delta)),this.trigger("isNew",!1)}return innerPromise},Document.prototype.save=function(done){var self=this,finalPromise=(new Deferred).done(done);if(!this.collection)return finalPromise.reject(arguments),console.error("Document.save api handle is not implemented."),finalPromise;var preSaveErr=self.$__presaveValidate();if(preSaveErr)return finalPromise.reject(preSaveErr),finalPromise;var p0=new Deferred;self.validate(function(err){err?(p0.reject(err),finalPromise.reject(err)):p0.resolve()});var subDocs=self.$__getAllSubdocs(),whenCond=subDocs.map(function(d){return d.save()});whenCond.push(p0);var p1=Deferred.when.apply(Deferred,whenCond);return p1.fail(function(err){self.$__.inserting&&(self.isNew=!0,self.emit("isNew",!0)),finalPromise.reject(err)}),p1.done(function(){self.$__handleSave().done(function(){finalPromise.resolve.apply(finalPromise,arguments)}).fail(function(){finalPromise.reject.apply(finalPromise,arguments)})}),finalPromise},Document.prototype.toObject=function(options){if(options&&options.depopulate&&this.$__.wasPopulated)return utils.clone(this._id,options);var optionsParameter=options;(!options||"Object"!=utils.getFunctionName(options.constructor)||options&&options._useSchemaOptions)&&(options=this.schema.options.toObject?clone(this.schema.options.toObject):{}),void 0===options.minimize&&(options.minimize=this.schema.options.minimize),optionsParameter||(options._useSchemaOptions=!0);var ret=utils.clone(this._doc,options);if((options.virtuals||options.getters&&!1!==options.virtuals)&&applyGetters(this,ret,"virtuals",options),options.getters&&(applyGetters(this,ret,"paths",options),options.minimize&&(ret=minimize(ret)||{})),!0===options.transform||this.schema.options.toObject&&options.transform){var opts=options.json?this.schema.options.toJSON:this.schema.options.toObject;opts&&(options.transform=opts.transform)}if("function"==typeof options.transform){var xformed=options.transform(this,ret,options);"undefined"!=typeof xformed&&(ret=xformed)}return ret},Document.prototype.toJSON=function(options){return(!options||"Object"!=utils.getFunctionName(options.constructor)||(!options||options.json)&&this.schema.options.toJSON)&&(options=this.schema.options.toJSON?utils.clone(this.schema.options.toJSON):{}),options.json=!0,this.toObject(options)},Document.prototype.equals=function(doc){var tid=this.get("_id"),docid=doc.get("_id");return tid||docid?tid&&tid.equals?docid?tid.equals(docid):!1:tid===docid:deepEqual(this,doc)},Document.prototype.populated=function(path,val,options){if(null==val){if(!this.$__.populated)return void 0;var v=this.$__.populated[path];return v?v.value:void 0}return!0===val?this.$__.populated?this.$__.populated[path]:void 0:(this.$__.populated||(this.$__.populated={}),this.$__.populated[path]={value:val,options:options},val)},Document.prototype.$__fullPath=function(path){return path||""},Document.prototype.remove=function(){return this.collection?this.collection.remove(this):delete this},Document.prototype.empty=function(){for(var doc=this,self=this,paths=Object.keys(this.schema.paths),plen=paths.length,ii=0;plen>ii;++ii){var p=paths[ii];if("_id"!=p)for(var type=this.schema.paths[p],path=p.split("."),len=path.length,last=len-1,doc_=doc,i=0;len>i;++i){var defaultVal,piece=path[i];i===last?(defaultVal=type.getDefault(self,!0),doc_[piece]=defaultVal||void 0,self.$__.activePaths["default"](p)):doc_=doc_[piece]||(doc_[piece]={})}}},/*!
	 * Module exports.
	 */
Document.ValidationError=ValidationError,module.exports=Document},/*!**********************!*\
  !*** ./lib/utils.js ***!
  \**********************/
function(module,exports,__webpack_require__){(function(Buffer,global,process){"use strict";function isRegExp(o){return"object"==typeof o&&"[object RegExp]"===toString.call(o)}function cloneRegExp(regexp){if(!isRegExp(regexp))throw new TypeError("Not a RegExp");var flags=[];return regexp.global&&flags.push("g"),regexp.multiline&&flags.push("m"),regexp.ignoreCase&&flags.push("i"),new RegExp(regexp.source,flags.join(""))}/*!
	 * ignore
	 */
function cloneObject(obj,options){var hasKeys,keys,val,k,i,retainKeyOrder=options&&options.retainKeyOrder,minimize=options&&options.minimize,ret={};if(retainKeyOrder)for(k in obj)val=clone(obj[k],options),minimize&&"undefined"==typeof val||(hasKeys||(hasKeys=!0),ret[k]=val);else for(keys=Object.keys(obj),i=keys.length;i--;)k=keys[i],val=clone(obj[k],options),minimize&&"undefined"==typeof val||(hasKeys||(hasKeys=!0),ret[k]=val);return minimize?hasKeys&&ret:ret}function cloneArray(arr,options){for(var ret=[],i=0,l=arr.length;l>i;i++)ret.push(clone(arr[i],options));return ret}function getFunctionName(ctor){return ctor.name?ctor.name:(ctor.toString().trim().match(rFunctionName)||[])[1]}/*!
	 * Module dependencies.
	 */
var Document,ObjectId=__webpack_require__(/*! ./types/objectid */16),mpath=__webpack_require__(/*! ./mpath */20);exports.mpath=mpath,exports.pluralization=[[/(m)an$/gi,"$1en"],[/(pe)rson$/gi,"$1ople"],[/(child)$/gi,"$1ren"],[/^(ox)$/gi,"$1en"],[/(ax|test)is$/gi,"$1es"],[/(octop|vir)us$/gi,"$1i"],[/(alias|status)$/gi,"$1es"],[/(bu)s$/gi,"$1ses"],[/(buffal|tomat|potat)o$/gi,"$1oes"],[/([ti])um$/gi,"$1a"],[/sis$/gi,"ses"],[/(?:([^f])fe|([lr])f)$/gi,"$1$2ves"],[/(hive)$/gi,"$1s"],[/([^aeiouy]|qu)y$/gi,"$1ies"],[/(x|ch|ss|sh)$/gi,"$1es"],[/(matr|vert|ind)ix|ex$/gi,"$1ices"],[/([m|l])ouse$/gi,"$1ice"],[/(kn|w|l)ife$/gi,"$1ives"],[/(quiz)$/gi,"$1zes"],[/s$/gi,"s"],[/([^a-z])$/,"$1"],[/$/gi,"s"]];var rules=exports.pluralization;exports.uncountables=["advice","energy","excretion","digestion","cooperation","health","justice","labour","machinery","equipment","information","pollution","sewage","paper","money","species","series","rain","rice","fish","sheep","moose","deer","news","expertise","status","media"];var uncountables=exports.uncountables;/*!
	 * Pluralize function.
	 *
	 * @author TJ Holowaychuk (extracted from _ext.js_)
	 * @param {String} string to pluralize
	 * @api private
	 */
exports.pluralize=function(str){var found;return!~uncountables.indexOf(str.toLowerCase())&&(found=rules.filter(function(rule){return str.match(rule[0])}),found[0])?str.replace(found[0][0],found[0][1]):str},/*!
	 * Determines if `a` and `b` are deep equal.
	 *
	 * Modified from node/lib/assert.js
	 * Modified from mongoose/utils.js
	 *
	 * @param {*} a a value to compare to `b`
	 * @param {*} b a value to compare to `a`
	 * @return {Boolean}
	 * @api private
	 */
exports.deepEqual=function(a,b){return a instanceof ObjectId&&b instanceof ObjectId?a.toString()===b.toString():a instanceof Number&&b instanceof Number?a.valueOf()===b.valueOf():Buffer.isBuffer(a)?a.equals(b):(isStorageObject(a)&&(a=a.toObject()),isStorageObject(b)&&(b=b.toObject()),_.isEqual(a,b))};var toString=Object.prototype.toString;/*!
	 * Object clone with Storage natives support.
	 *
	 * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.
	 *
	 * Functions are never cloned.
	 *
	 * @param {Object} obj the object to clone
	 * @param {Object} options
	 * @return {Object} the cloned object
	 * @api private
	 */
exports.clone=function(obj,options){if(void 0===obj||null===obj)return obj;if(_.isArray(obj))return cloneArray(obj,options);if(isStorageObject(obj))return options&&options.json&&"function"==typeof obj.toJSON?obj.toJSON(options):obj.toObject(options);if(obj.constructor)switch(getFunctionName(obj.constructor)){case"Object":return cloneObject(obj,options);case"Date":return new obj.constructor(+obj);case"RegExp":return cloneRegExp(obj)}return obj instanceof ObjectId?options.depopulate?obj.toString():new ObjectId(obj.id):!obj.constructor&&_.isObject(obj)?cloneObject(obj,options):obj.valueOf?obj.valueOf():void 0};var clone=exports.clone;/*!
	 * Merges `from` into `to` without overwriting existing properties.
	 *
	 * @param {Object} to
	 * @param {Object} from
	 * @api private
	 */
exports.merge=function merge(to,from){for(var key,keys=Object.keys(from),i=keys.length;i--;)key=keys[i],"undefined"==typeof to[key]?to[key]=from[key]:_.isObject(from[key])&&merge(to[key],from[key])},/*!
	 * Generates a random string
	 *
	 * @api private
	 */
exports.random=function(){return Math.random().toString().substr(3)},/*!
	 * Returns if `v` is a storage object that has a `toObject()` method we can use.
	 *
	 * This is for compatibility with libs like Date.js which do foolish things to Natives.
	 *
	 * @param {*} v
	 * @api private
	 */
exports.isStorageObject=function(v){/*! ./document */
return Document||(Document=__webpack_require__(5)),v instanceof Document||v&&v.isStorageArray};var isStorageObject=exports.isStorageObject;/*!
	 * Return the value of `obj` at the given `path`.
	 *
	 * @param {String} path
	 * @param {Object} obj
	 */
exports.getValue=function(path,obj,map){return mpath.get(path,obj,"_doc",map)},/*!
	 * Sets the value of `obj` at the given `path`.
	 *
	 * @param {String} path
	 * @param {Anything} val
	 * @param {Object} obj
	 */
exports.setValue=function(path,val,obj,map){mpath.set(path,val,obj,"_doc",map)};var rFunctionName=/^function\s*([^\s(]+)/;exports.getFunctionName=getFunctionName,exports.setImmediate=function(){function onmessage(e){if(e.data==ID){head=head.next;var func=head.func;delete head.func,func()}}if("object"==typeof global&&process.nextTick)return process.nextTick;if(window.setImmediate)return window.setImmediate;var head={},tail=head,ID=Math.random();return window.addEventListener?window.addEventListener("message",onmessage,!1):window.attachEvent("onmessage",onmessage),window.postMessage?function(func){tail=tail.next={func:func},window.postMessage(ID,"*")}:function(func){setTimeout(func,0)}}(),Function.prototype.bind||(Function.prototype.bind=function(oThis){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var aArgs=Array.prototype.slice.call(arguments,1),fToBind=this,Noop=function(){},fBound=function(){return fToBind.apply(this instanceof Noop&&oThis?this:oThis,aArgs.concat(Array.prototype.slice.call(arguments)))};return Noop.prototype=this.prototype,fBound.prototype=new Noop,fBound})}).call(exports,__webpack_require__(/*! (webpack)/~/node-libs-browser/~/buffer/index.js */12).Buffer,function(){return this}(),__webpack_require__(/*! (webpack)/~/node-libs-browser/~/process/browser.js */28))},/*!**********************!*\
  !*** ./lib/error.js ***!
  \**********************/
function(module,exports,__webpack_require__){"use strict";function StorageError(msg){this.message=msg,this.name="StorageError"}StorageError.prototype=new Error,/*!
	 * Formats error messages
	 */
StorageError.prototype.formatMessage=function(msg,path,type,val){if(!msg)throw new TypeError("message is required");return msg.replace(/{PATH}/,path).replace(/{VALUE}/,String(val||"")).replace(/{TYPE}/,type||"declared type")},/*!
	 * Module exports.
	 */
module.exports=StorageError,StorageError.messages=__webpack_require__(/*! ./error/messages */21),/*!
	 * Expose subclasses
	 */
StorageError.CastError=__webpack_require__(/*! ./error/cast */22),StorageError.ValidationError=__webpack_require__(/*! ./error/validation */23),StorageError.ValidatorError=__webpack_require__(/*! ./error/validator */24),StorageError.MissingSchemaError=__webpack_require__(/*! ./error/missingSchema */25)},/*!*************************!*\
  !*** ./lib/deferred.js ***!
  \*************************/
function(module,exports,__webpack_require__){"use strict";function Deferred(fn){this.then=__bind(this.then,this),this.resolveWith=__bind(this.resolveWith,this),this.resolve=__bind(this.resolve,this),this.rejectWith=__bind(this.rejectWith,this),this.reject=__bind(this.reject,this),this.promise=__bind(this.promise,this),this.progress=__bind(this.progress,this),this.pipe=__bind(this.pipe,this),this.notifyWith=__bind(this.notifyWith,this),this.notify=__bind(this.notify,this),this.fail=__bind(this.fail,this),this.done=__bind(this.done,this),this.always=__bind(this.always,this),"function"==typeof fn&&fn.call(this,this),this._state="pending"}var Promise,flatten,isObservable,__slice=Array.prototype.slice,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};if(!Array.prototype.forEach)throw new Error("Deferred requires Array.forEach");isObservable=function(obj){return obj instanceof Deferred||obj instanceof Promise},flatten=function(args){var flatted;return args?(flatted=[],args.forEach(function(item){return item?"function"==typeof item?flatted.push(item):args.forEach(function(fn){return"function"==typeof fn?flatted.push(fn):void 0}):void 0}),flatted):[]},Promise=function(){function Promise(deferred){this._deferred=deferred}return Promise.prototype._deferred=null,Promise.prototype.always=function(){var args,_ref;return args=1<=arguments.length?__slice.call(arguments,0):[],(_ref=this._deferred).always.apply(_ref,args),this},Promise.prototype.done=function(){var args,_ref;return args=1<=arguments.length?__slice.call(arguments,0):[],(_ref=this._deferred).done.apply(_ref,args),this},Promise.prototype.fail=function(){var args,_ref;return args=1<=arguments.length?__slice.call(arguments,0):[],(_ref=this._deferred).fail.apply(_ref,args),this},Promise.prototype.pipe=function(doneFilter,failFilter){return this._deferred.pipe(doneFilter,failFilter)},Promise.prototype.state=function(){return this._deferred.state()},Promise.prototype.then=function(done,fail){return this._deferred.then(done,fail),this},Promise}(),Deferred.prototype.always=function(){var args,functions,_ref,_this=this;return args=1<=arguments.length?__slice.call(arguments,0):[],0===args.length?this:(functions=flatten(args),"pending"===this._state?(this._alwaysCallbacks||(this._alwaysCallbacks=[]),(_ref=this._alwaysCallbacks).push.apply(_ref,functions)):functions.forEach(function(fn){return fn.apply(_this._context,_this._withArguments)}),this)},Deferred.prototype.done=function(){var args,functions,_ref,_this=this;return args=1<=arguments.length?__slice.call(arguments,0):[],0===args.length?this:(functions=flatten(args),"resolved"===this._state?functions.forEach(function(fn){return fn.apply(_this._context,_this._withArguments)}):"pending"===this._state&&(this._doneCallbacks||(this._doneCallbacks=[]),(_ref=this._doneCallbacks).push.apply(_ref,functions)),this)},Deferred.prototype.fail=function(){var args,functions,_ref,_this=this;return args=1<=arguments.length?__slice.call(arguments,0):[],0===args.length?this:(functions=flatten(args),"rejected"===this._state?functions.forEach(function(fn){return fn.apply(_this._context,_this._withArguments)}):"pending"===this._state&&(this._failCallbacks||(this._failCallbacks=[]),(_ref=this._failCallbacks).push.apply(_ref,functions)),this)},Deferred.prototype.notify=function(){var args;return args=1<=arguments.length?__slice.call(arguments,0):[],this.notifyWith.apply(this,[window].concat(__slice.call(args))),this},Deferred.prototype.notifyWith=function(){var args,context,_ref;return context=arguments[0],args=2<=arguments.length?__slice.call(arguments,1):[],"pending"!==this._state?this:(null!=(_ref=this._progressCallbacks)&&_ref.forEach(function(fn){return fn.apply(context,args)}),this)},Deferred.prototype.pipe=function(doneFilter,failFilter){var def;return def=new Deferred,this.done(function(){var args,result,_ref;return args=1<=arguments.length?__slice.call(arguments,0):[],null!=doneFilter?(result=doneFilter.apply(this,args),isObservable(result)?result.done(function(){var doneArgs,_ref;return doneArgs=1<=arguments.length?__slice.call(arguments,0):[],(_ref=def.resolveWith).call.apply(_ref,[def,this].concat(__slice.call(doneArgs)))}).fail(function(){var failArgs,_ref;return failArgs=1<=arguments.length?__slice.call(arguments,0):[],(_ref=def.rejectWith).call.apply(_ref,[def,this].concat(__slice.call(failArgs)))}):def.resolveWith.call(def,this,result)):(_ref=def.resolveWith).call.apply(_ref,[def,this].concat(__slice.call(args)))}),this.fail(function(){var args,result,_ref,_ref2;return args=1<=arguments.length?__slice.call(arguments,0):[],null!=failFilter?(result=failFilter.apply(this,args),isObservable(result)?result.done(function(){var doneArgs,_ref;return doneArgs=1<=arguments.length?__slice.call(arguments,0):[],(_ref=def.resolveWith).call.apply(_ref,[def,this].concat(__slice.call(doneArgs)))}).fail(function(){var failArgs,_ref;return failArgs=1<=arguments.length?__slice.call(arguments,0):[],(_ref=def.rejectWith).call.apply(_ref,[def,this].concat(__slice.call(failArgs)))}):def.rejectWith.call(def,this,result),(_ref=def.rejectWith).call.apply(_ref,[def,this].concat(__slice.call(args)))):(_ref2=def.rejectWith).call.apply(_ref2,[def,this].concat(__slice.call(args)))}),def.promise()},Deferred.prototype.progress=function(){var args,functions,_ref;return args=1<=arguments.length?__slice.call(arguments,0):[],0===args.length||"pending"!==this._state?this:(functions=flatten(args),this._progressCallbacks||(this._progressCallbacks=[]),(_ref=this._progressCallbacks).push.apply(_ref,functions),this)},Deferred.prototype.promise=function(){return this._promise||(this._promise=new Promise(this))},Deferred.prototype.reject=function(){var args;return args=1<=arguments.length?__slice.call(arguments,0):[],this.rejectWith.apply(this,[window].concat(__slice.call(args))),this},Deferred.prototype.rejectWith=function(){var args,context,_ref,_ref2,_this=this;return context=arguments[0],args=2<=arguments.length?__slice.call(arguments,1):[],"pending"!==this._state?this:(this._state="rejected",this._withArguments=args,this._context=context,null!=(_ref=this._failCallbacks)&&_ref.forEach(function(fn){return fn.apply(_this._context,args)}),null!=(_ref2=this._alwaysCallbacks)&&_ref2.forEach(function(fn){return fn.apply(_this._context,args)}),this)},Deferred.prototype.resolve=function(){var args;return args=1<=arguments.length?__slice.call(arguments,0):[],this.resolveWith.apply(this,[window].concat(__slice.call(args))),this},Deferred.prototype.resolveWith=function(){var args,context,_ref,_ref2,_this=this;return context=arguments[0],args=2<=arguments.length?__slice.call(arguments,1):[],"pending"!==this._state?this:(this._state="resolved",this._context=context,this._withArguments=args,null!=(_ref=this._doneCallbacks)&&_ref.forEach(function(fn){return fn.apply(_this._context,args)}),null!=(_ref2=this._alwaysCallbacks)&&_ref2.forEach(function(fn){return fn.apply(_this._context,args)}),this)},Deferred.prototype.state=function(){return this._state},Deferred.prototype.then=function(doneCallbacks,failCallbacks,progressCallbacks){return this.done(doneCallbacks),this.fail(failCallbacks),this.progress(progressCallbacks),this},Deferred.when=function(){var allDoneArgs,allReady,args,readyCount;return args=1<=arguments.length?__slice.call(arguments,0):[],0===args.length?(new Deferred).resolve().promise():1===args.length?args[0].promise():(allReady=new Deferred,readyCount=0,allDoneArgs=[],args.forEach(function(dfr,index){return dfr.done(function(){var doneArgs;return doneArgs=1<=arguments.length?__slice.call(arguments,0):[],readyCount+=1,allDoneArgs[index]=doneArgs,readyCount===args.length?allReady.resolve.apply(allReady,allDoneArgs):void 0}).fail(function(){var failArgs;return failArgs=1<=arguments.length?__slice.call(arguments,0):[],allReady.rejectWith.apply(allReady,[this].concat(__slice.call(failArgs)))})}),allReady.promise())},module.exports=Deferred},/*!***********************!*\
  !*** ./lib/events.js ***!
  \***********************/
function(module,exports,__webpack_require__){"use strict";function Events(){}Events.prototype={on:function(name,callback,context){if(!eventsApi(this,"on",name,[callback,context])||!callback)return this;this._events||(this._events={});var events=this._events[name]||(this._events[name]=[]);return events.push({callback:callback,context:context,ctx:context||this}),this},once:function(name,callback,context){if(!eventsApi(this,"once",name,[callback,context])||!callback)return this;var self=this,once=_.once(function(){self.off(name,once),callback.apply(this,arguments)});return once._callback=callback,this.on(name,once,context)},off:function(name,callback,context){var retain,ev,events,names,i,l,j,k;if(!this._events||!eventsApi(this,"off",name,[callback,context]))return this;if(!name&&!callback&&!context)return this._events={},this;for(names=name?[name]:_.keys(this._events),i=0,l=names.length;l>i;i++)if(name=names[i],events=this._events[name]){if(this._events[name]=retain=[],callback||context)for(j=0,k=events.length;k>j;j++)ev=events[j],(callback&&callback!==ev.callback&&callback!==ev.callback._callback||context&&context!==ev.context)&&retain.push(ev);retain.length||delete this._events[name]}return this},trigger:function(name){if(!this._events)return this;var args=Array.prototype.slice.call(arguments,1);if(!eventsApi(this,"trigger",name,args))return this;var events=this._events[name],allEvents=this._events.all;return events&&triggerEvents(events,args),allEvents&&triggerEvents(allEvents,arguments),this},stopListening:function(obj,name,callback){var listeningTo=this._listeningTo;if(!listeningTo)return this;var remove=!name&&!callback;callback||"object"!=typeof name||(callback=this),obj&&((listeningTo={})[obj._listenId]=obj);for(var id in listeningTo)obj=listeningTo[id],obj.off(name,callback,this),(remove||_.isEmpty(obj._events))&&delete this._listeningTo[id];return this}};var eventSplitter=/\s+/,eventsApi=function(obj,action,name,rest){if(!name)return!0;if("object"==typeof name){for(var key in name)obj[action].apply(obj,[key,name[key]].concat(rest));return!1}if(eventSplitter.test(name)){for(var names=name.split(eventSplitter),i=0,l=names.length;l>i;i++)obj[action].apply(obj,[names[i]].concat(rest));return!1}return!0},triggerEvents=function(events,args){var ev,i=-1,l=events.length,a1=args[0],a2=args[1],a3=args[2];switch(args.length){case 0:for(;++i<l;)(ev=events[i]).callback.call(ev.ctx);return;case 1:for(;++i<l;)(ev=events[i]).callback.call(ev.ctx,a1);return;case 2:for(;++i<l;)(ev=events[i]).callback.call(ev.ctx,a1,a2);return;case 3:for(;++i<l;)(ev=events[i]).callback.call(ev.ctx,a1,a2,a3);return;default:for(;++i<l;)(ev=events[i]).callback.apply(ev.ctx,args)}},listenMethods={listenTo:"on",listenToOnce:"once"};_.each(listenMethods,function(implementation,method){Events[method]=function(obj,name,callback){var listeningTo=this._listeningTo||(this._listeningTo={}),id=obj._listenId||(obj._listenId=_.uniqueId("l"));return listeningTo[id]=obj,callback||"object"!=typeof name||(callback=this),obj[implementation](name,callback,this),this}}),module.exports=Events},/*!*****************************!*\
  !*** ./lib/statemachine.js ***!
  \*****************************/
function(module,exports,__webpack_require__){"use strict";/*!
	 * StateMachine represents a minimal `interface` for the
	 * constructors it builds via StateMachine.ctor(...).
	 *
	 * @api private
	 */
var StateMachine=module.exports=function(){this.paths={},this.states={}};/*!
	 * StateMachine.ctor('state1', 'state2', ...)
	 * A factory method for subclassing StateMachine.
	 * The arguments are a list of states. For each state,
	 * the constructor's prototype gets state transition
	 * methods named after each state. These transition methods
	 * place their path argument into the given state.
	 *
	 * @param {String} state
	 * @param {String} [state]
	 * @return {Function} subclass constructor
	 * @private
	 */
StateMachine.ctor=function(){var states=_.toArray(arguments),ctor=function(){StateMachine.apply(this,arguments),this.stateNames=states;for(var state,i=states.length;i--;)state=states[i],this.states[state]={}};return ctor.prototype=Object.create(StateMachine.prototype),ctor.prototype.constructor=ctor,states.forEach(function(state){ctor.prototype[state]=function(path){this._changeState(path,state)}}),ctor},/*!
	 * This function is wrapped by the state change functions:
	 *
	 * - `require(path)`
	 * - `modify(path)`
	 * - `init(path)`
	 *
	 * @api private
	 */
StateMachine.prototype._changeState=function(path,nextState){var prevBucket=this.states[this.paths[path]];prevBucket&&delete prevBucket[path],this.paths[path]=nextState,this.states[nextState][path]=!0},/*!
	 * ignore
	 */
StateMachine.prototype.clear=function(state){for(var path,keys=Object.keys(this.states[state]),i=keys.length;i--;)path=keys[i],delete this.states[state][path],delete this.paths[path]},/*!
	 * Checks to see if at least one path is in the states passed in via `arguments`
	 * e.g., this.some('required', 'inited')
	 *
	 * @param {String} state that we want to check for.
	 * @private
	 */
StateMachine.prototype.some=function(){var self=this,what=arguments.length?arguments:this.stateNames;return Array.prototype.some.call(what,function(state){return Object.keys(self.states[state]).length})},/*!
	 * This function builds the functions that get assigned to `forEach` and `map`,
	 * since both of those methods share a lot of the same logic.
	 *
	 * @param {String} iterMethod is either 'forEach' or 'map'
	 * @return {Function}
	 * @api private
	 */
StateMachine.prototype._iter=function(iterMethod){return function(){var numArgs=arguments.length,states=_.toArray(arguments).slice(0,numArgs-1),callback=arguments[numArgs-1];states.length||(states=this.stateNames);var self=this,paths=states.reduce(function(paths,state){return paths.concat(Object.keys(self.states[state]))},[]);return paths[iterMethod](function(path,i,paths){return callback(path,i,paths)})}},/*!
	 * Iterates over the paths that belong to one of the parameter states.
	 *
	 * The function profile can look like:
	 * this.forEach(state1, fn);         // iterates over all paths in state1
	 * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
	 * this.forEach(fn);                 // iterates over all paths in all states
	 *
	 * @param {String} [state]
	 * @param {String} [state]
	 * @param {Function} callback
	 * @private
	 */
StateMachine.prototype.forEach=function(){return this.forEach=this._iter("forEach"),this.forEach.apply(this,arguments)},/*!
	 * Maps over the paths that belong to one of the parameter states.
	 *
	 * The function profile can look like:
	 * this.forEach(state1, fn);         // iterates over all paths in state1
	 * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
	 * this.forEach(fn);                 // iterates over all paths in all states
	 *
	 * @param {String} [state]
	 * @param {String} [state]
	 * @param {Function} callback
	 * @return {Array}
	 * @private
	 */
StateMachine.prototype.map=function(){return this.map=this._iter("map"),this.map.apply(this,arguments)}},/*!****************************!*\
  !*** ./lib/types/index.js ***!
  \****************************/
function(module,exports,__webpack_require__){"use strict";/*!
	 * Module exports.
	 */
exports.Array=__webpack_require__(/*! ./array */26),exports.Buffer=__webpack_require__(/*! ./buffer */27),exports.Embedded=__webpack_require__(/*! ./embedded */19),exports.DocumentArray=__webpack_require__(/*! ./documentarray */18),exports.ObjectId=__webpack_require__(/*! ./objectid */16)},/*!*******************************************************!*\
  !*** (webpack)/~/node-libs-browser/~/buffer/index.js ***!
  \*******************************************************/
function(module,exports,__webpack_require__){(function(Buffer){function Buffer(subject,encoding){var self=this;if(!(self instanceof Buffer))return new Buffer(subject,encoding);var length,type=typeof subject;if("number"===type)length=+subject;else if("string"===type)length=Buffer.byteLength(subject,encoding);else{if("object"!==type||null===subject)throw new TypeError("must start with number, buffer, array or string");"Buffer"===subject.type&&isArray(subject.data)&&(subject=subject.data),length=+subject.length}if(length>kMaxLength)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength.toString(16)+" bytes");0>length?length=0:length>>>=0,Buffer.TYPED_ARRAY_SUPPORT?self=Buffer._augment(new Uint8Array(length)):(self.length=length,self._isBuffer=!0);var i;if(Buffer.TYPED_ARRAY_SUPPORT&&"number"==typeof subject.byteLength)self._set(subject);else if(isArrayish(subject))if(Buffer.isBuffer(subject))for(i=0;length>i;i++)self[i]=subject.readUInt8(i);else for(i=0;length>i;i++)self[i]=(subject[i]%256+256)%256;else if("string"===type)self.write(subject,0,encoding);else if("number"===type&&!Buffer.TYPED_ARRAY_SUPPORT)for(i=0;length>i;i++)self[i]=0;return length>0&&length<=Buffer.poolSize&&(self.parent=rootParent),self}function SlowBuffer(subject,encoding){if(!(this instanceof SlowBuffer))return new SlowBuffer(subject,encoding);var buf=new Buffer(subject,encoding);return delete buf.parent,buf}function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;length?(length=Number(length),length>remaining&&(length=remaining)):length=remaining;var strLen=string.length;if(strLen%2!==0)throw new Error("Invalid hex string");length>strLen/2&&(length=strLen/2);for(var i=0;length>i;i++){var parsed=parseInt(string.substr(2*i,2),16);if(isNaN(parsed))throw new Error("Invalid hex string");buf[offset+i]=parsed}return i}function utf8Write(buf,string,offset,length){var charsWritten=blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);return charsWritten}function asciiWrite(buf,string,offset,length){var charsWritten=blitBuffer(asciiToBytes(string),buf,offset,length);return charsWritten}function binaryWrite(buf,string,offset,length){return asciiWrite(buf,string,offset,length)}function base64Write(buf,string,offset,length){var charsWritten=blitBuffer(base64ToBytes(string),buf,offset,length);return charsWritten}function utf16leWrite(buf,string,offset,length){var charsWritten=blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);return charsWritten}function base64Slice(buf,start,end){return base64.fromByteArray(0===start&&end===buf.length?buf:buf.slice(start,end))}function utf8Slice(buf,start,end){var res="",tmp="";end=Math.min(buf.length,end);for(var i=start;end>i;i++)buf[i]<=127?(res+=decodeUtf8Char(tmp)+String.fromCharCode(buf[i]),tmp=""):tmp+="%"+buf[i].toString(16);return res+decodeUtf8Char(tmp)}function asciiSlice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;end>i;i++)ret+=String.fromCharCode(127&buf[i]);return ret}function binarySlice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;end>i;i++)ret+=String.fromCharCode(buf[i]);return ret}function hexSlice(buf,start,end){var len=buf.length;(!start||0>start)&&(start=0),(!end||0>end||end>len)&&(end=len);for(var out="",i=start;end>i;i++)out+=toHex(buf[i]);return out}function utf16leSlice(buf,start,end){for(var bytes=buf.slice(start,end),res="",i=0;i<bytes.length;i+=2)res+=String.fromCharCode(bytes[i]+256*bytes[i+1]);return res}function checkOffset(offset,ext,length){if(offset%1!==0||0>offset)throw new RangeError("offset is not uint");if(offset+ext>length)throw new RangeError("Trying to access beyond buffer length")}function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError("buffer must be a Buffer instance");if(value>max||min>value)throw new RangeError("value is out of bounds");if(offset+ext>buf.length)throw new RangeError("index out of range")}function objectWriteUInt16(buf,value,offset,littleEndian){0>value&&(value=65535+value+1);for(var i=0,j=Math.min(buf.length-offset,2);j>i;i++)buf[offset+i]=(value&255<<8*(littleEndian?i:1-i))>>>8*(littleEndian?i:1-i)}function objectWriteUInt32(buf,value,offset,littleEndian){0>value&&(value=4294967295+value+1);for(var i=0,j=Math.min(buf.length-offset,4);j>i;i++)buf[offset+i]=value>>>8*(littleEndian?i:3-i)&255}function checkIEEE754(buf,value,offset,ext,max,min){if(value>max||min>value)throw new RangeError("value is out of bounds");if(offset+ext>buf.length)throw new RangeError("index out of range");if(0>offset)throw new RangeError("index out of range")}function writeFloat(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,value,offset,4,3.4028234663852886e38,-3.4028234663852886e38),ieee754.write(buf,value,offset,littleEndian,23,4),offset+4}function writeDouble(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,value,offset,8,1.7976931348623157e308,-1.7976931348623157e308),ieee754.write(buf,value,offset,littleEndian,52,8),offset+8}function base64clean(str){if(str=stringtrim(str).replace(INVALID_BASE64_RE,""),str.length<2)return"";for(;str.length%4!==0;)str+="=";return str}function stringtrim(str){return str.trim?str.trim():str.replace(/^\s+|\s+$/g,"")}function isArrayish(subject){return isArray(subject)||Buffer.isBuffer(subject)||subject&&"object"==typeof subject&&"number"==typeof subject.length}function toHex(n){return 16>n?"0"+n.toString(16):n.toString(16)}function utf8ToBytes(string,units){units=units||1/0;for(var codePoint,length=string.length,leadSurrogate=null,bytes=[],i=0;length>i;i++){if(codePoint=string.charCodeAt(i),codePoint>55295&&57344>codePoint){if(!leadSurrogate){if(codePoint>56319){(units-=3)>-1&&bytes.push(239,191,189);continue}if(i+1===length){(units-=3)>-1&&bytes.push(239,191,189);continue}leadSurrogate=codePoint;continue}if(56320>codePoint){(units-=3)>-1&&bytes.push(239,191,189),leadSurrogate=codePoint;continue}codePoint=leadSurrogate-55296<<10|codePoint-56320|65536,leadSurrogate=null}else leadSurrogate&&((units-=3)>-1&&bytes.push(239,191,189),leadSurrogate=null);if(128>codePoint){if((units-=1)<0)break;bytes.push(codePoint)}else if(2048>codePoint){if((units-=2)<0)break;bytes.push(codePoint>>6|192,63&codePoint|128)}else if(65536>codePoint){if((units-=3)<0)break;bytes.push(codePoint>>12|224,codePoint>>6&63|128,63&codePoint|128)}else{if(!(2097152>codePoint))throw new Error("Invalid code point");if((units-=4)<0)break;bytes.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,63&codePoint|128)}}return bytes}function asciiToBytes(str){for(var byteArray=[],i=0;i<str.length;i++)byteArray.push(255&str.charCodeAt(i));return byteArray}function utf16leToBytes(str,units){for(var c,hi,lo,byteArray=[],i=0;i<str.length&&!((units-=2)<0);i++)c=str.charCodeAt(i),hi=c>>8,lo=c%256,byteArray.push(lo),byteArray.push(hi);return byteArray}function base64ToBytes(str){return base64.toByteArray(base64clean(str))}function blitBuffer(src,dst,offset,length){for(var i=0;length>i&&!(i+offset>=dst.length||i>=src.length);i++)dst[i+offset]=src[i];return i}function decodeUtf8Char(str){try{return decodeURIComponent(str)}catch(err){return String.fromCharCode(65533)}}/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
var base64=__webpack_require__(/*! base64-js */41),ieee754=__webpack_require__(/*! ieee754 */39),isArray=__webpack_require__(/*! is-array */40);exports.Buffer=Buffer,exports.SlowBuffer=SlowBuffer,exports.INSPECT_MAX_BYTES=50,Buffer.poolSize=8192;var kMaxLength=1073741823,rootParent={};Buffer.TYPED_ARRAY_SUPPORT=function(){try{var buf=new ArrayBuffer(0),arr=new Uint8Array(buf);return arr.foo=function(){return 42},42===arr.foo()&&"function"==typeof arr.subarray&&0===new Uint8Array(1).subarray(1,1).byteLength}catch(e){return!1}}(),Buffer.isBuffer=function(b){return!(null==b||!b._isBuffer)},Buffer.compare=function(a,b){if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var x=a.length,y=b.length,i=0,len=Math.min(x,y);len>i&&a[i]===b[i];i++);return i!==len&&(x=a[i],y=b[i]),y>x?-1:x>y?1:0},Buffer.isEncoding=function(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function(list,totalLength){if(!isArray(list))throw new TypeError("list argument must be an Array of Buffers.");if(0===list.length)return new Buffer(0);if(1===list.length)return list[0];var i;if(void 0===totalLength)for(totalLength=0,i=0;i<list.length;i++)totalLength+=list[i].length;var buf=new Buffer(totalLength),pos=0;for(i=0;i<list.length;i++){var item=list[i];item.copy(buf,pos),pos+=item.length}return buf},Buffer.byteLength=function(str,encoding){var ret;switch(str+="",encoding||"utf8"){case"ascii":case"binary":case"raw":ret=str.length;break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":ret=2*str.length;break;case"hex":ret=str.length>>>1;break;case"utf8":case"utf-8":ret=utf8ToBytes(str).length;break;case"base64":ret=base64ToBytes(str).length;break;default:ret=str.length}return ret},Buffer.prototype.length=void 0,Buffer.prototype.parent=void 0,Buffer.prototype.toString=function(encoding,start,end){var loweredCase=!1;if(start>>>=0,end=void 0===end||end===1/0?this.length:end>>>0,encoding||(encoding="utf8"),0>start&&(start=0),end>this.length&&(end=this.length),start>=end)return"";for(;;)switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"binary":return binarySlice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase(),loweredCase=!0}},Buffer.prototype.equals=function(b){if(!Buffer.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b?!0:0===Buffer.compare(this,b)},Buffer.prototype.inspect=function(){var str="",max=exports.INSPECT_MAX_BYTES;return this.length>0&&(str=this.toString("hex",0,max).match(/.{2}/g).join(" "),this.length>max&&(str+=" ... ")),"<Buffer "+str+">"},Buffer.prototype.compare=function(b){if(!Buffer.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b?0:Buffer.compare(this,b)},Buffer.prototype.indexOf=function(val,byteOffset){function arrayIndexOf(arr,val,byteOffset){for(var foundIndex=-1,i=0;byteOffset+i<arr.length;i++)if(arr[byteOffset+i]===val[-1===foundIndex?0:i-foundIndex]){if(-1===foundIndex&&(foundIndex=i),i-foundIndex+1===val.length)return byteOffset+foundIndex}else foundIndex=-1;return-1}if(byteOffset>2147483647?byteOffset=2147483647:-2147483648>byteOffset&&(byteOffset=-2147483648),byteOffset>>=0,0===this.length)return-1;if(byteOffset>=this.length)return-1;if(0>byteOffset&&(byteOffset=Math.max(this.length+byteOffset,0)),"string"==typeof val)return 0===val.length?-1:String.prototype.indexOf.call(this,val,byteOffset);if(Buffer.isBuffer(val))return arrayIndexOf(this,val,byteOffset);if("number"==typeof val)return Buffer.TYPED_ARRAY_SUPPORT&&"function"===Uint8Array.prototype.indexOf?Uint8Array.prototype.indexOf.call(this,val,byteOffset):arrayIndexOf(this,[val],byteOffset);throw new TypeError("val must be string, number or Buffer")},Buffer.prototype.get=function(offset){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(offset)},Buffer.prototype.set=function(v,offset){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(v,offset)},Buffer.prototype.write=function(string,offset,length,encoding){if(isFinite(offset))isFinite(length)||(encoding=length,length=void 0);else{var swap=encoding;encoding=offset,offset=length,length=swap}if(offset=Number(offset)||0,0>length||0>offset||offset>this.length)throw new RangeError("attempt to write outside buffer bounds");var remaining=this.length-offset;length?(length=Number(length),length>remaining&&(length=remaining)):length=remaining,encoding=String(encoding||"utf8").toLowerCase();var ret;switch(encoding){case"hex":ret=hexWrite(this,string,offset,length);break;case"utf8":case"utf-8":ret=utf8Write(this,string,offset,length);break;case"ascii":ret=asciiWrite(this,string,offset,length);break;case"binary":ret=binaryWrite(this,string,offset,length);break;case"base64":ret=base64Write(this,string,offset,length);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":ret=utf16leWrite(this,string,offset,length);break;default:throw new TypeError("Unknown encoding: "+encoding)}return ret},Buffer.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},Buffer.prototype.slice=function(start,end){var len=this.length;start=~~start,end=void 0===end?len:~~end,0>start?(start+=len,0>start&&(start=0)):start>len&&(start=len),0>end?(end+=len,0>end&&(end=0)):end>len&&(end=len),start>end&&(end=start);var newBuf;if(Buffer.TYPED_ARRAY_SUPPORT)newBuf=Buffer._augment(this.subarray(start,end));else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,void 0);for(var i=0;sliceLen>i;i++)newBuf[i]=this[i+start]}return newBuf.length&&(newBuf.parent=this.parent||this),newBuf},Buffer.prototype.readUIntLE=function(offset,byteLength,noAssert){offset>>>=0,byteLength>>>=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return val},Buffer.prototype.readUIntBE=function(offset,byteLength,noAssert){offset>>>=0,byteLength>>>=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset+--byteLength],mul=1;byteLength>0&&(mul*=256);)val+=this[offset+--byteLength]*mul;return val},Buffer.prototype.readUInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),this[offset]},Buffer.prototype.readUInt16LE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]|this[offset+1]<<8},Buffer.prototype.readUInt16BE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]<<8|this[offset+1]},Buffer.prototype.readUInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+16777216*this[offset+3]},Buffer.prototype.readUInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),16777216*this[offset]+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3])},Buffer.prototype.readIntLE=function(offset,byteLength,noAssert){offset>>>=0,byteLength>>>=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return mul*=128,val>=mul&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readIntBE=function(offset,byteLength,noAssert){offset>>>=0,byteLength>>>=0,noAssert||checkOffset(offset,byteLength,this.length);for(var i=byteLength,mul=1,val=this[offset+--i];i>0&&(mul*=256);)val+=this[offset+--i]*mul;return mul*=128,val>=mul&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),128&this[offset]?-1*(255-this[offset]+1):this[offset]},Buffer.prototype.readInt16LE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt16BE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24},Buffer.prototype.readInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3]},Buffer.prototype.readFloatLE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!0,23,4)},Buffer.prototype.readFloatBE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!1,23,4)},Buffer.prototype.readDoubleLE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!0,52,8)},Buffer.prototype.readDoubleBE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!1,52,8)},Buffer.prototype.writeUIntLE=function(value,offset,byteLength,noAssert){value=+value,offset>>>=0,byteLength>>>=0,noAssert||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength),0);var mul=1,i=0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)this[offset+i]=value/mul>>>0&255;return offset+byteLength},Buffer.prototype.writeUIntBE=function(value,offset,byteLength,noAssert){value=+value,offset>>>=0,byteLength>>>=0,noAssert||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength),0);var i=byteLength-1,mul=1;for(this[offset+i]=255&value;--i>=0&&(mul*=256);)this[offset+i]=value/mul>>>0&255;return offset+byteLength},Buffer.prototype.writeUInt8=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),this[offset]=value,offset+1},Buffer.prototype.writeUInt16LE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeUInt16BE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeUInt32LE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset+3]=value>>>24,this[offset+2]=value>>>16,this[offset+1]=value>>>8,this[offset]=value):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeUInt32BE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeIntLE=function(value,offset,byteLength,noAssert){value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength-1)-1,-Math.pow(2,8*byteLength-1));var i=0,mul=1,sub=0>value?1:0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeIntBE=function(value,offset,byteLength,noAssert){value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength-1)-1,-Math.pow(2,8*byteLength-1));var i=byteLength-1,mul=1,sub=0>value?1:0;for(this[offset+i]=255&value;--i>=0&&(mul*=256);)this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeInt8=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),0>value&&(value=255+value+1),this[offset]=value,offset+1},Buffer.prototype.writeInt16LE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeInt16BE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeInt32LE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value,this[offset+1]=value>>>8,this[offset+2]=value>>>16,this[offset+3]=value>>>24):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeInt32BE=function(value,offset,noAssert){return value=+value,offset>>>=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),0>value&&(value=4294967295+value+1),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeFloatLE=function(value,offset,noAssert){return writeFloat(this,value,offset,!0,noAssert)},Buffer.prototype.writeFloatBE=function(value,offset,noAssert){return writeFloat(this,value,offset,!1,noAssert)},Buffer.prototype.writeDoubleLE=function(value,offset,noAssert){return writeDouble(this,value,offset,!0,noAssert)},Buffer.prototype.writeDoubleBE=function(value,offset,noAssert){return writeDouble(this,value,offset,!1,noAssert)},Buffer.prototype.copy=function(target,target_start,start,end){if(start||(start=0),end||0===end||(end=this.length),target_start>=target.length&&(target_start=target.length),target_start||(target_start=0),end>0&&start>end&&(end=start),end===start)return 0;if(0===target.length||0===this.length)return 0;if(0>target_start)throw new RangeError("targetStart out of bounds");if(0>start||start>=this.length)throw new RangeError("sourceStart out of bounds");if(0>end)throw new RangeError("sourceEnd out of bounds");end>this.length&&(end=this.length),target.length-target_start<end-start&&(end=target.length-target_start+start);var len=end-start;if(1e3>len||!Buffer.TYPED_ARRAY_SUPPORT)for(var i=0;len>i;i++)target[i+target_start]=this[i+start];else target._set(this.subarray(start,start+len),target_start);return len},Buffer.prototype.fill=function(value,start,end){if(value||(value=0),start||(start=0),end||(end=this.length),start>end)throw new RangeError("end < start");if(end!==start&&0!==this.length){if(0>start||start>=this.length)throw new RangeError("start out of bounds");if(0>end||end>this.length)throw new RangeError("end out of bounds");var i;if("number"==typeof value)for(i=start;end>i;i++)this[i]=value;else{var bytes=utf8ToBytes(value.toString()),len=bytes.length;for(i=start;end>i;i++)this[i]=bytes[i%len]}return this}},Buffer.prototype.toArrayBuffer=function(){if("undefined"!=typeof Uint8Array){if(Buffer.TYPED_ARRAY_SUPPORT)return new Buffer(this).buffer;for(var buf=new Uint8Array(this.length),i=0,len=buf.length;len>i;i+=1)buf[i]=this[i];return buf.buffer}throw new TypeError("Buffer.toArrayBuffer not supported in this browser")};var BP=Buffer.prototype;Buffer._augment=function(arr){return arr.constructor=Buffer,arr._isBuffer=!0,arr._set=arr.set,arr.get=BP.get,arr.set=BP.set,arr.write=BP.write,arr.toString=BP.toString,arr.toLocaleString=BP.toString,arr.toJSON=BP.toJSON,arr.equals=BP.equals,arr.compare=BP.compare,arr.indexOf=BP.indexOf,arr.copy=BP.copy,arr.slice=BP.slice,arr.readUIntLE=BP.readUIntLE,arr.readUIntBE=BP.readUIntBE,arr.readUInt8=BP.readUInt8,arr.readUInt16LE=BP.readUInt16LE,arr.readUInt16BE=BP.readUInt16BE,arr.readUInt32LE=BP.readUInt32LE,arr.readUInt32BE=BP.readUInt32BE,arr.readIntLE=BP.readIntLE,arr.readIntBE=BP.readIntBE,arr.readInt8=BP.readInt8,arr.readInt16LE=BP.readInt16LE,arr.readInt16BE=BP.readInt16BE,arr.readInt32LE=BP.readInt32LE,arr.readInt32BE=BP.readInt32BE,arr.readFloatLE=BP.readFloatLE,arr.readFloatBE=BP.readFloatBE,arr.readDoubleLE=BP.readDoubleLE,arr.readDoubleBE=BP.readDoubleBE,arr.writeUInt8=BP.writeUInt8,arr.writeUIntLE=BP.writeUIntLE,arr.writeUIntBE=BP.writeUIntBE,arr.writeUInt16LE=BP.writeUInt16LE,arr.writeUInt16BE=BP.writeUInt16BE,arr.writeUInt32LE=BP.writeUInt32LE,arr.writeUInt32BE=BP.writeUInt32BE,arr.writeIntLE=BP.writeIntLE,arr.writeIntBE=BP.writeIntBE,arr.writeInt8=BP.writeInt8,arr.writeInt16LE=BP.writeInt16LE,arr.writeInt16BE=BP.writeInt16BE,arr.writeInt32LE=BP.writeInt32LE,arr.writeInt32BE=BP.writeInt32BE,arr.writeFloatLE=BP.writeFloatLE,arr.writeFloatBE=BP.writeFloatBE,arr.writeDoubleLE=BP.writeDoubleLE,arr.writeDoubleBE=BP.writeDoubleBE,arr.fill=BP.fill,arr.inspect=BP.inspect,arr.toArrayBuffer=BP.toArrayBuffer,arr};var INVALID_BASE64_RE=/[^+\/0-9A-z\-]/g}).call(exports,__webpack_require__(/*! (webpack)/~/node-libs-browser/~/buffer/index.js */12).Buffer)},/*!*****************************!*\
  !*** ./lib/schema/index.js ***!
  \*****************************/
function(module,exports,__webpack_require__){"use strict";/*!
	 * Module exports.
	 */
exports.String=__webpack_require__(/*! ./string */29),exports.Number=__webpack_require__(/*! ./number */30),exports.Boolean=__webpack_require__(/*! ./boolean */31),exports.DocumentArray=__webpack_require__(/*! ./documentarray */32),exports.Array=__webpack_require__(/*! ./array */33),exports.Buffer=__webpack_require__(/*! ./buffer */34),exports.Date=__webpack_require__(/*! ./date */35),exports.ObjectId=__webpack_require__(/*! ./objectid */36),exports.Mixed=__webpack_require__(/*! ./mixed */15),exports.Oid=exports.ObjectId,exports.Object=exports.Mixed,exports.Bool=exports.Boolean},/*!**************************************!*\
  !*** ./~/json-loader!./package.json ***!
  \**************************************/
function(module,exports,__webpack_require__){module.exports={name:"storage",version:"0.3.1",description:"Mongoose-like schema validation, collections and documents on browser (client-side)",author:"Constantine Melnikov <ka.melnikov@gmail.com>",repository:{type:"git",url:"https://github.com/archangel-irk/storage.git"},main:"dist/storage.min.js",scripts:{test:"grunt test"},devDependencies:{grunt:"latest","time-grunt":"latest","grunt-contrib-jshint":"latest","grunt-karma":"latest","grunt-karma-coveralls":"latest","grunt-webpack":"latest",karma:"latest","karma-coverage":"latest","karma-mocha":"latest","karma-chai":"latest","karma-phantomjs-launcher":"latest","karma-chrome-launcher":"latest","karma-firefox-launcher":"latest","karma-ie-launcher":"latest","karma-safari-launcher":"latest","karma-sauce-launcher":"latest","karma-webpack":"latest",lodash:"2.4.1",webpack:"latest","json-loader":"latest","istanbul-instrumenter-loader":"latest",dox:"latest","highlight.js":"latest",jade:"latest",markdown:"latest"}}},/*!*****************************!*\
  !*** ./lib/schema/mixed.js ***!
  \*****************************/
function(module,exports,__webpack_require__){"use strict";function Mixed(path,options){if(options&&options["default"]){var def=options["default"];Array.isArray(def)&&0===def.length?options["default"]=Array:!options.shared&&_.isPlainObject(def)&&0===Object.keys(def).length&&(options["default"]=function(){return{}})}SchemaType.call(this,path,options)}/*!
	 * Module dependencies.
	 */
var SchemaType=__webpack_require__(/*! ../schematype */3);/*!
	 * Inherits from SchemaType.
	 */
Mixed.prototype=Object.create(SchemaType.prototype),Mixed.prototype.constructor=Mixed,Mixed.prototype.checkRequired=function(val){return void 0!==val&&null!==val},Mixed.prototype.cast=function(value){return value},/*!
	 * Module exports.
	 */
module.exports=Mixed},/*!*******************************!*\
  !*** ./lib/types/objectid.js ***!
  \*******************************/
function(module,exports,__webpack_require__){(function(process){"use strict";function ObjectId(id){if(!(this instanceof ObjectId))return new ObjectId(id);if(id instanceof ObjectId)return id;this._bsontype="ObjectId";var valid=ObjectId.isValid(id);if(!valid&&null!=id)throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");return valid&&"string"==typeof id&&24===id.length?ObjectId.createFromHexString(id):(null==id||"number"==typeof id?this.id=this.generate(id):null!=id&&12===id.length&&(this.id=id),void(ObjectId.cacheHexString&&(this.__id=this.toHexString())))}for(var BinaryParser=__webpack_require__(/*! ../binaryparser */37).BinaryParser,MACHINE_ID=parseInt(16777215*Math.random(),10),checkForHexRegExp=new RegExp("^[0-9a-fA-F]{24}$"),hexTable=[],i=0;256>i;i++)hexTable[i]=(15>=i?"0":"")+i.toString(16);ObjectId.prototype.toHexString=function(){if(ObjectId.cacheHexString&&this.__id)return this.__id;for(var hexString="",i=0;i<this.id.length;i++)hexString+=hexTable[this.id.charCodeAt(i)];return ObjectId.cacheHexString&&(this.__id=hexString),hexString},ObjectId.prototype.get_inc=function(){return ObjectId.index=(ObjectId.index+1)%16777215,ObjectId.index},ObjectId.prototype.getInc=function(){return this.get_inc()},ObjectId.prototype.generate=function(time){"number"!=typeof time&&(time=parseInt(Date.now()/1e3,10));var time4Bytes=BinaryParser.encodeInt(time,32,!0,!0),machine3Bytes=BinaryParser.encodeInt(MACHINE_ID,24,!1),pid2Bytes=BinaryParser.fromShort("undefined"==typeof process?Math.floor(1e5*Math.random()):process.pid),index3Bytes=BinaryParser.encodeInt(this.get_inc(),24,!1,!0);return time4Bytes+machine3Bytes+pid2Bytes+index3Bytes},ObjectId.prototype.toString=function(){return this.toHexString()},ObjectId.prototype.toJSON=function(){return this.toHexString()},ObjectId.prototype.equals=function(otherID){if(null==otherID)return!1;var id=otherID instanceof ObjectId||otherID.toHexString?otherID.id:ObjectId.createFromHexString(otherID).id;return this.id===id},ObjectId.prototype.getTimestamp=function(){var timestamp=new Date;return timestamp.setTime(1e3*Math.floor(BinaryParser.decodeInt(this.id.substring(0,4),32,!0,!0))),timestamp},ObjectId.index=parseInt(16777215*Math.random(),10),ObjectId.createPk=function(){return new ObjectId},ObjectId.createFromTime=function(time){var id=BinaryParser.encodeInt(time,32,!0,!0)+BinaryParser.encodeInt(0,64,!0,!0);return new ObjectId(id)},ObjectId.createFromHexString=function(hexString){if("undefined"==typeof hexString||null!=hexString&&24!==hexString.length)throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");var len=hexString.length;if(len>24)throw new Error("Id cannot be longer than 12 bytes");for(var string,number,result="",index=0;len>index;index+=2)string=hexString.substr(index,2),number=parseInt(string,16),result+=BinaryParser.fromByte(number);return new ObjectId(result,hexString)},ObjectId.isValid=function(id){return null==id?!1:null!=id&&"number"!=typeof id&&12!==id.length&&24!==id.length?!1:"string"==typeof id&&24===id.length?checkForHexRegExp.test(id):!0},/*!
	 * @ignore
	 */
Object.defineProperty(ObjectId.prototype,"generationTime",{enumerable:!0,get:function(){return Math.floor(BinaryParser.decodeInt(this.id.substring(0,4),32,!0,!0))},set:function(value){value=BinaryParser.encodeInt(value,32,!0,!0),this.id=value+this.id.substr(4),this.toHexString()}}),module.exports=ObjectId,module.exports.ObjectId=ObjectId}).call(exports,__webpack_require__(/*! (webpack)/~/node-libs-browser/~/process/browser.js */28))},/*!*************************!*\
  !*** ./lib/internal.js ***!
  \*************************/
function(module,exports,__webpack_require__){"use strict";function InternalCache(){this.strictMode=void 0,this.selected=void 0,this.saveError=void 0,this.validationError=void 0,this.adhocPaths=void 0,this.removing=void 0,this.inserting=void 0,this.version=void 0,this.getters={},this._id=void 0,this.populate=void 0,this.populated=void 0,this.wasPopulated=!1,this.scope=void 0,this.activePaths=new ActiveRoster,this.ownerDocument=void 0,this.fullPath=void 0}/*!
	 * Dependencies
	 */
var StateMachine=__webpack_require__(/*! ./statemachine */10),ActiveRoster=StateMachine.ctor("require","modify","init","default");module.exports=InternalCache},/*!************************************!*\
  !*** ./lib/types/documentarray.js ***!
  \************************************/
function(module,exports,__webpack_require__){"use strict";function StorageDocumentArray(values,path,doc){var arr=[];return arr.push.apply(arr,values),_.mixin(arr,StorageDocumentArray.mixin),arr.validators=[],arr._path=path,arr.isStorageArray=!0,arr.isStorageDocumentArray=!0,doc&&(arr._parent=doc,arr._schema=doc.schema.path(path),arr._handlers={isNew:arr.notify("isNew"),save:arr.notify("save")},doc.on("save",arr._handlers.save),doc.on("isNew",arr._handlers.isNew)),arr}/*!
	 * Module dependencies.
	 */
var StorageArray=__webpack_require__(/*! ./array */26),ObjectId=__webpack_require__(/*! ./objectid */16),ObjectIdSchema=__webpack_require__(/*! ../schema/objectid */36),Document=__webpack_require__(/*! ../document */5);/*!
	 * Inherits from StorageArray
	 */
StorageDocumentArray.mixin=Object.create(StorageArray.mixin),StorageDocumentArray.mixin._cast=function(value){return value instanceof this._schema.casterConstructor?(value.__parent&&value.__parentArray||(value.__parent=this._parent,value.__parentArray=this),value):((value instanceof ObjectId||!_.isObject(value))&&(value={_id:value}),new this._schema.casterConstructor(value,this))},StorageDocumentArray.mixin.id=function(id){var casted,sid,_id;try{var casted_=ObjectIdSchema.prototype.cast.call({},id);casted_&&(casted=String(casted_))}catch(e){casted=null}for(var i=0,l=this.length;l>i;i++)if(_id=this[i].get("_id"),_id instanceof Document){if(sid||(sid=String(id)),sid==_id._id)return this[i]}else if(_id instanceof ObjectId){if(casted==_id)return this[i]}else if(sid||(sid=String(id)),sid==_id)return this[i];return null},StorageDocumentArray.mixin.toObject=function(options){return this.map(function(doc){return doc&&doc.toObject(options)||null})},StorageDocumentArray.mixin.create=function(obj){return new this._schema.casterConstructor(obj)},StorageDocumentArray.mixin.notify=function(event){var self=this;return function(val){for(var i=self.length;i--;)self[i]&&self[i].trigger(event,val)}},/*!
	 * Module exports.
	 */
module.exports=StorageDocumentArray},/*!*******************************!*\
  !*** ./lib/types/embedded.js ***!
  \*******************************/
function(module,exports,__webpack_require__){"use strict";function EmbeddedDocument(data,parentArr){parentArr?(this.__parentArray=parentArr,this.__parent=parentArr._parent):(this.__parentArray=void 0,this.__parent=void 0),Document.call(this,data,void 0);var self=this;this.on("isNew",function(val){self.isNew=val})}/*!
	 * Module dependencies.
	 */
var Document=__webpack_require__(/*! ../document */5),Deferred=__webpack_require__(/*! ../deferred */8);/*!
	 * Inherit from Document
	 */
EmbeddedDocument.prototype=Object.create(Document.prototype),EmbeddedDocument.prototype.constructor=EmbeddedDocument,EmbeddedDocument.prototype.markModified=function(path){this.__parentArray&&(this.$__.activePaths.modify(path),this.isNew?this.__parentArray._markModified():this.__parentArray._markModified(this,path))},EmbeddedDocument.prototype.save=function(fn){var promise=(new Deferred).done(fn);return promise.resolve(),promise},EmbeddedDocument.prototype.remove=function(fn){if(!this.__parentArray)return this;var _id;if(!this.willRemove){if(_id=this._doc._id,!_id)throw new Error("For your own good, Storage does not know how to remove an EmbeddedDocument that has no _id");this.__parentArray.pull({_id:_id}),this.willRemove=!0}return fn&&fn(null),this},EmbeddedDocument.prototype.update=function(){throw new Error("The #update method is not available on EmbeddedDocuments")},EmbeddedDocument.prototype.invalidate=function(path,err,val,first){if(!this.__parent){var msg="Unable to invalidate a subdocument that has not been added to an array.";throw new Error(msg)}var index=this.__parentArray.indexOf(this),parentPath=this.__parentArray._path,fullPath=[parentPath,index,path].join(".");return 2<arguments.length?this.__parent.invalidate(fullPath,err,val):this.__parent.invalidate(fullPath,err),first&&(this.$__.validationError=this.ownerDocument().$__.validationError),!0},EmbeddedDocument.prototype.ownerDocument=function(){if(this.$__.ownerDocument)return this.$__.ownerDocument;var parent=this.__parent;if(!parent)return this;for(;parent.__parent;)parent=parent.__parent;return this.$__.ownerDocument=parent,this.$__.ownerDocument},EmbeddedDocument.prototype.$__fullPath=function(path){if(!this.$__.fullPath){var parent=this;if(!parent.__parent)return path;for(var paths=[];parent.__parent;)paths.unshift(parent.__parentArray._path),parent=parent.__parent;this.$__.fullPath=paths.join("."),this.$__.ownerDocument||(this.$__.ownerDocument=parent)}return path?this.$__.fullPath+"."+path:this.$__.fullPath},EmbeddedDocument.prototype.parent=function(){return this.__parent},EmbeddedDocument.prototype.parentArray=function(){return this.__parentArray},/*!
	 * Module exports.
	 */
module.exports=EmbeddedDocument},/*!**********************!*\
  !*** ./lib/mpath.js ***!
  \**********************/
function(module,exports,__webpack_require__){"use strict";/*!
	 * Returns the value passed to it.
	 */
function K(v){return v}exports.get=function(path,o,special,map){var lookup;"function"==typeof special&&(special.length<2?(map=special,special=void 0):(lookup=special,special=void 0)),map||(map=K);var parts="string"==typeof path?path.split("."):path;if(!Array.isArray(parts))throw new TypeError("Invalid `path`. Must be either string or array");for(var part,obj=o,i=0;i<parts.length;++i){if(part=parts[i],Array.isArray(obj)&&!/^\d+$/.test(part)){var paths=parts.slice(i);return obj.map(function(item){return item?exports.get(paths,item,special||lookup,map):map(void 0)})}if(obj=lookup?lookup(obj,part):special&&obj[special]?obj[special][part]:obj[part],!obj)return map(obj)}return map(obj)},exports.set=function(path,val,o,special,map,_copying){var lookup;"function"==typeof special&&(special.length<2?(map=special,special=void 0):(lookup=special,special=void 0)),map||(map=K);var parts="string"==typeof path?path.split("."):path;if(!Array.isArray(parts))throw new TypeError("Invalid `path`. Must be either string or array");if(null!=o){for(var part,copy=_copying||/\$/.test(path),obj=o,i=0,len=parts.length-1;len>i;++i)if(part=parts[i],"$"!==part){if(Array.isArray(obj)&&!/^\d+$/.test(part)){var paths=parts.slice(i);if(!copy&&Array.isArray(val))for(var j=0;j<obj.length&&j<val.length;++j)exports.set(paths,val[j],obj[j],special||lookup,map,copy);else for(var j=0;j<obj.length;++j)exports.set(paths,val,obj[j],special||lookup,map,copy);return}if(obj=lookup?lookup(obj,part):special&&obj[special]?obj[special][part]:obj[part],!obj)return}else if(i==len-1)break;if(part=parts[len],special&&obj[special]&&(obj=obj[special]),Array.isArray(obj)&&!/^\d+$/.test(part))if(!copy&&Array.isArray(val))for(var item,j=0;j<obj.length&&j<val.length;++j)item=obj[j],item&&(lookup?lookup(item,part,map(val[j])):(item[special]&&(item=item[special]),item[part]=map(val[j])));else for(var j=0;j<obj.length;++j)item=obj[j],item&&(lookup?lookup(item,part,map(val)):(item[special]&&(item=item[special]),item[part]=map(val)));else lookup?lookup(obj,part,map(val)):obj[part]=map(val)}}},/*!*******************************!*\
  !*** ./lib/error/messages.js ***!
  \*******************************/
function(module,exports,__webpack_require__){"use strict";var msg=module.exports={};msg.general={},msg.general["default"]="Validator failed for path `{PATH}` with value `{VALUE}`",msg.general.required="Path `{PATH}` is required.",msg.Number={},msg.Number.min="Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).",msg.Number.max="Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).",msg.String={},msg.String["enum"]="`{VALUE}` is not a valid enum value for path `{PATH}`.",msg.String.match="Path `{PATH}` is invalid ({VALUE})."},/*!***************************!*\
  !*** ./lib/error/cast.js ***!
  \***************************/
function(module,exports,__webpack_require__){"use strict";function CastError(type,value,path){StorageError.call(this,"Cast to "+type+' failed for value "'+value+'" at path "'+path+'"'),this.name="CastError",this.type=type,this.value=value,this.path=path}/*!
	 * Module dependencies.
	 */
var StorageError=__webpack_require__(/*! ../error.js */7);/*!
	 * Inherits from StorageError.
	 */
CastError.prototype=Object.create(StorageError.prototype),CastError.prototype.constructor=CastError,/*!
	 * exports
	 */
module.exports=CastError},/*!*********************************!*\
  !*** ./lib/error/validation.js ***!
  \*********************************/
function(module,exports,__webpack_require__){"use strict";function ValidationError(instance){StorageError.call(this,"Validation failed"),this.name="ValidationError",this.errors=instance.errors={}}/*!
	 * Module requirements
	 */
var StorageError=__webpack_require__(/*! ../error.js */7);/*!
	 * Inherits from StorageError.
	 */
ValidationError.prototype=Object.create(StorageError.prototype),ValidationError.prototype.constructor=ValidationError,/*!
	 * Module exports
	 */
module.exports=ValidationError},/*!********************************!*\
  !*** ./lib/error/validator.js ***!
  \********************************/
function(module,exports,__webpack_require__){"use strict";function ValidatorError(path,msg,type,val){msg||(msg=errorMessages.general["default"]);var message=this.formatMessage(msg,path,type,val);StorageError.call(this,message),this.name="ValidatorError",this.path=path,this.type=type,this.value=val}/*!
	 * Module dependencies.
	 */
var StorageError=__webpack_require__(/*! ../error.js */7),errorMessages=StorageError.messages;/*!
	 * toString helper
	 */
ValidatorError.prototype.toString=function(){return this.message},/*!
	 * Inherits from StorageError
	 */
ValidatorError.prototype=Object.create(StorageError.prototype),ValidatorError.prototype.constructor=ValidatorError,/*!
	 * exports
	 */
module.exports=ValidatorError},/*!************************************!*\
  !*** ./lib/error/missingSchema.js ***!
  \************************************/
function(module,exports,__webpack_require__){"use strict";/*!
	 * MissingSchema Error constructor.
	 *
	 * @inherits StorageError
	 */
function MissingSchemaError(){var msg="Schema hasn't been registered for document.\nUse storage.Document(data, schema)";StorageError.call(this,msg),this.name="MissingSchemaError"}/*!
	 * Module dependencies.
	 */
var StorageError=__webpack_require__(/*! ../error.js */7);/*!
	 * Inherits from StorageError.
	 */
MissingSchemaError.prototype=Object.create(StorageError.prototype),MissingSchemaError.prototype.constructor=StorageError,/*!
	 * exports
	 */
module.exports=MissingSchemaError},/*!****************************!*\
  !*** ./lib/types/array.js ***!
  \****************************/
function(module,exports,__webpack_require__){"use strict";function StorageArray(values,path,doc){var arr=[];return arr.push.apply(arr,values),_.mixin(arr,StorageArray.mixin),arr.validators=[],arr._path=path,arr.isStorageArray=!0,doc&&(arr._parent=doc,arr._schema=doc.schema.path(path)),arr}/*!
	 * Module dependencies.
	 */
var EmbeddedDocument=__webpack_require__(/*! ./embedded */19),Document=__webpack_require__(/*! ../document */5),ObjectId=__webpack_require__(/*! ./objectid */16);StorageArray.mixin={_parent:void 0,_cast:function(value){var owner=this._owner,populated=!1;if(this._parent&&(owner||(owner=this._owner=this._parent.ownerDocument?this._parent.ownerDocument():this._parent),populated=owner.populated(this._path,!0)),populated&&null!=value){var Model=populated.options.model;(value instanceof ObjectId||!_.isObject(value))&&(value={_id:value});var isDisc=value.schema&&value.schema.discriminatorMapping&&void 0!==value.schema.discriminatorMapping.key;return isDisc||(value=new Model(value)),this._schema.caster.cast(value,this._parent,!0)}return this._schema.caster.cast(value,this._parent,!1)},_markModified:function(elem,embeddedPath){var dirtyPath,parent=this._parent;return parent&&(dirtyPath=this._path,arguments.length&&(dirtyPath=null!=embeddedPath?dirtyPath+"."+this.indexOf(elem)+"."+embeddedPath:dirtyPath+"."+elem),parent.markModified(dirtyPath)),this},push:function(){var values=[].map.call(arguments,this._cast,this),ret=[].push.apply(this,values);return this._markModified(),ret},pop:function(){var ret=[].pop.call(this);return this._markModified(),ret},shift:function(){var ret=[].shift.call(this);return this._markModified(),ret},pull:function(){for(var mem,values=[].map.call(arguments,this._cast,this),cur=this._parent.get(this._path),i=cur.length;i--;)mem=cur[i],mem instanceof EmbeddedDocument?values.some(function(v){return v.equals(mem)})&&[].splice.call(cur,i,1):~cur.indexOf.call(values,mem)&&[].splice.call(cur,i,1);return this._markModified(),this},splice:function(){var ret,vals,i;if(arguments.length){for(vals=[],i=0;i<arguments.length;++i)vals[i]=2>i?arguments[i]:this._cast(arguments[i]);ret=[].splice.apply(this,vals),this._markModified()}return ret},unshift:function(){var values=[].map.call(arguments,this._cast,this);return[].unshift.apply(this,values),this._markModified(),this.length},sort:function(){var ret=[].sort.apply(this,arguments);return this._markModified(),ret},addToSet:function(){var values=[].map.call(arguments,this._cast,this),added=[],type=values[0]instanceof EmbeddedDocument?"doc":values[0]instanceof Date?"date":"";return values.forEach(function(v){var found;switch(type){case"doc":found=this.some(function(doc){return doc.equals(v)});break;case"date":var val=+v;found=this.some(function(d){return+d===val});break;default:found=~this.indexOf(v)}found||([].push.call(this,v),this._markModified(),[].push.call(added,v))},this),added},set:function(i,val){return this[i]=this._cast(val),this._markModified(i),this},toObject:function(options){return options&&options.depopulate?this.map(function(doc){return doc instanceof Document?doc.toObject(options):doc}):this.slice()},indexOf:function(obj){obj instanceof ObjectId&&(obj=obj.toString());for(var i=0,len=this.length;len>i;++i)if(obj==this[i])return i;return-1}},StorageArray.mixin.remove=StorageArray.mixin.pull,/*!
	 * Module exports.
	 */
module.exports=StorageArray},/*!*****************************!*\
  !*** ./lib/types/buffer.js ***!
  \*****************************/
function(module,exports,__webpack_require__){(function(Buffer){"use strict";function StorageBuffer(value,encode,offset){var val,length=arguments.length;val=0===length||null===arguments[0]||void 0===arguments[0]?0:value;var encoding,path,doc;Array.isArray(encode)?(path=encode[0],doc=encode[1]):encoding=encode;var buf=new Buffer(val,encoding,offset);return _.mixin(buf,StorageBuffer.mixin),buf.isStorageBuffer=!0,Object.defineProperties(buf,{validators:{value:[]},_path:{value:path},_parent:{value:doc}}),doc&&"string"==typeof path&&Object.defineProperty(buf,"_schema",{value:doc.schema.path(path)}),buf._subtype=0,buf}/*!
	 * Module dependencies.
	 */
{var Binary=__webpack_require__(/*! ../binary */38);__webpack_require__(/*! ../utils */6)}/*!
	 * Inherit from Buffer.
	 */
StorageBuffer.mixin={_parent:void 0,_subtype:void 0,_markModified:function(){var parent=this._parent;return parent&&parent.markModified(this._path),this},write:function(){var written=Buffer.prototype.write.apply(this,arguments);return written>0&&this._markModified(),written},copy:function(target){var ret=Buffer.prototype.copy.apply(this,arguments);return target&&target.isStorageBuffer&&target._markModified(),ret}},"writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 writeFloat writeDouble fill utf8Write binaryWrite asciiWrite set writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE writeInt16LE writeInt16BE writeInt32LE writeInt32BE writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE".split(" ").forEach(function(method){Buffer.prototype[method]&&(StorageBuffer.mixin[method]=new Function("var ret = Buffer.prototype."+method+".apply(this, arguments);this._markModified();return ret;"))}),StorageBuffer.mixin.toObject=function(options){var subtype="number"==typeof options?options:this._subtype||0;return new Binary(this,subtype)},StorageBuffer.mixin.equals=function(other){if(!Buffer.isBuffer(other))return!1;if(this.length!==other.length)return!1;for(var i=0;i<this.length;++i)if(this[i]!==other[i])return!1;return!0},StorageBuffer.mixin.subtype=function(subtype){if("number"!=typeof subtype)throw new TypeError("Invalid subtype. Expected a number");this._subtype!==subtype&&this._markModified(),this._subtype=subtype},/*!
	 * Module exports.
	 */
StorageBuffer.Binary=Binary,module.exports=StorageBuffer}).call(exports,__webpack_require__(/*! (webpack)/~/node-libs-browser/~/buffer/index.js */12).Buffer)},/*!**********************************************************!*\
  !*** (webpack)/~/node-libs-browser/~/process/browser.js ***!
  \**********************************************************/
function(module,exports,__webpack_require__){function drainQueue(){if(!draining){draining=!0;for(var currentQueue,len=queue.length;len;){currentQueue=queue,queue=[];for(var i=-1;++i<len;)currentQueue[i]();len=queue.length}draining=!1}}function noop(){}var process=module.exports={},queue=[],draining=!1;process.nextTick=function(fun){queue.push(fun),draining||setTimeout(drainQueue,0)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}},/*!******************************!*\
  !*** ./lib/schema/string.js ***!
  \******************************/
function(module,exports,__webpack_require__){"use strict";function StringSchema(key,options){this.enumValues=[],this.regExp=null,SchemaType.call(this,key,options,"String")}/*!
	 * Module dependencies.
	 */
var SchemaType=__webpack_require__(/*! ../schematype */3),CastError=SchemaType.CastError,errorMessages=__webpack_require__(/*! ../error */7).messages;/*!
	 * Inherits from SchemaType.
	 */
StringSchema.prototype=Object.create(SchemaType.prototype),StringSchema.prototype.constructor=StringSchema,StringSchema.prototype["enum"]=function(){if(this.enumValidator&&(this.validators=this.validators.filter(function(v){return v[0]!==this.enumValidator},this),this.enumValidator=!1),void 0===arguments[0]||!1===arguments[0])return this;var values,errorMessage;_.isPlainObject(arguments[0])?(values=arguments[0].values,errorMessage=arguments[0].message):(values=arguments,errorMessage=errorMessages.String["enum"]);for(var i=0;i<values.length;i++)void 0!==values[i]&&this.enumValues.push(this.cast(values[i]));var vals=this.enumValues;return this.enumValidator=function(v){return void 0===v||~vals.indexOf(v)},this.validators.push([this.enumValidator,errorMessage,"enum"]),this},StringSchema.prototype.lowercase=function(){return this.set(function(v,self){return"string"!=typeof v&&(v=self.cast(v)),v?v.toLowerCase():v})},StringSchema.prototype.uppercase=function(){return this.set(function(v,self){return"string"!=typeof v&&(v=self.cast(v)),v?v.toUpperCase():v})},StringSchema.prototype.trim=function(){return this.set(function(v,self){return"string"!=typeof v&&(v=self.cast(v)),v?v.trim():v})},StringSchema.prototype.match=function(regExp,message){function matchValidator(v){return null!=v&&""!==v?regExp.test(v):!0}var msg=message||errorMessages.String.match;return this.validators.push([matchValidator,msg,"regexp"]),this},StringSchema.prototype.checkRequired=function(value,doc){return SchemaType._isRef(this,value,doc,!0)?null!=value:(value instanceof String||"string"==typeof value)&&value.length},StringSchema.prototype.cast=function(value){if(null===value)return value;if("undefined"!=typeof value){if(value._id&&"string"==typeof value._id)return value._id;if(value.toString)return value.toString()}throw new CastError("string",value,this.path)},/*!
	 * Module exports.
	 */
module.exports=StringSchema},/*!******************************!*\
  !*** ./lib/schema/number.js ***!
  \******************************/
function(module,exports,__webpack_require__){"use strict";function NumberSchema(key,options){SchemaType.call(this,key,options,"Number")}/*!
	 * Module requirements.
	 */
var SchemaType=__webpack_require__(/*! ../schematype */3),CastError=SchemaType.CastError,errorMessages=__webpack_require__(/*! ../error */7).messages;/*!
	 * Inherits from SchemaType.
	 */
NumberSchema.prototype=Object.create(SchemaType.prototype),NumberSchema.prototype.constructor=NumberSchema,NumberSchema.prototype.checkRequired=function(value){return SchemaType._isRef(this,value)?null!=value:"number"==typeof value||value instanceof Number},NumberSchema.prototype.min=function(value,message){if(this.minValidator&&(this.validators=this.validators.filter(function(v){return v[0]!==this.minValidator},this)),null!=value){var msg=message||errorMessages.Number.min;msg=msg.replace(/{MIN}/,value),this.validators.push([this.minValidator=function(v){return null===v||v>=value},msg,"min"])}return this},NumberSchema.prototype.max=function(value,message){if(this.maxValidator&&(this.validators=this.validators.filter(function(v){return v[0]!==this.maxValidator},this)),null!=value){var msg=message||errorMessages.Number.max;msg=msg.replace(/{MAX}/,value),this.validators.push([this.maxValidator=function(v){return null===v||value>=v},msg,"max"])}return this},NumberSchema.prototype.cast=function(value){var val=value&&value._id?value._id:value;if(!isNaN(val)){if(null===val)return val;if(""===val)return null;if("string"==typeof val&&(val=Number(val)),val instanceof Number)return val;if("number"==typeof val)return val;if(val.toString&&!Array.isArray(val)&&val.toString()==Number(val))return new Number(val)}throw new CastError("number",value,this.path)},/*!
	 * Module exports.
	 */
module.exports=NumberSchema},/*!*******************************!*\
  !*** ./lib/schema/boolean.js ***!
  \*******************************/
function(module,exports,__webpack_require__){"use strict";function BooleanSchema(path,options){SchemaType.call(this,path,options)}/*!
	 * Module dependencies.
	 */
var SchemaType=__webpack_require__(/*! ../schematype */3);/*!
	 * Inherits from SchemaType.
	 */
BooleanSchema.prototype=Object.create(SchemaType.prototype),BooleanSchema.prototype.constructor=BooleanSchema,BooleanSchema.prototype.checkRequired=function(value){return value===!0||value===!1},BooleanSchema.prototype.cast=function(value){return null===value?value:"0"===value?!1:"true"===value?!0:"false"===value?!1:!!value},/*!
	 * Module exports.
	 */
module.exports=BooleanSchema},/*!*************************************!*\
  !*** ./lib/schema/documentarray.js ***!
  \*************************************/
function(module,exports,__webpack_require__){"use strict";function DocumentArray(key,schema,options){function EmbeddedDocument(){Subdocument.apply(this,arguments)}EmbeddedDocument.prototype=Object.create(Subdocument.prototype),EmbeddedDocument.prototype.constructor=EmbeddedDocument,EmbeddedDocument.prototype.$__setSchema(schema);for(var i in schema.methods)EmbeddedDocument.prototype[i]=schema.methods[i];for(var j in schema.statics)EmbeddedDocument[j]=schema.statics[j];EmbeddedDocument.options=options,this.schema=schema,ArrayType.call(this,key,EmbeddedDocument,options),this.schema=schema;var path=this.path,fn=this.defaultValue;this["default"](function(){var arr=fn.call(this);return Array.isArray(arr)||(arr=[arr]),new StorageDocumentArray(arr,path,this)})}/*!
	 * Приблизительное сравнение двух массивов
	 *
	 * Это нужно для populated полей - их мы преобразовываем в id.
	 *
	 * Так же в сравнении не участвует id существующих Embedded документов,
	 * Если на сервере _id: false, а на клиенте по умолчанию есть _id.
	 *
	 * @param value
	 * @param prev
	 * @returns {*}
	 */
function approximatelyEqual(value,prev){prev=prev.toObject({depopulate:1});var i=value.length;return i===prev.length&&_.forEach(value,function(subdoc,i){subdoc._id||delete prev[i]._id}),utils.deepEqual(value,prev)}/*!
	 * Restore population
	 *
	 * @param {*} subdoc
	 * @param {Object} schemaTree
	 * @param {*} value
	 * @param {DocumentArray} prev
	 */
function restorePopulatedFields(subdoc,schemaTree,value,prev){var props;_.forEach(schemaTree,function(prop,key){var curVal;prop.ref&&(props={},curVal=value[key],curVal&&oid.isValid(curVal)&&_.forEach(prev,function(prevDoc){var prevDocProp=prevDoc[key];prevDocProp instanceof Document&&prevDocProp._id.equals(curVal)&&(subdoc[key]=prevDocProp)}))})}/*!
	 * Scopes paths selected in a query to this array.
	 * Necessary for proper default application of subdocument values.
	 *
	 * @param {DocumentArray} array - the array to scope `fields` paths
	 * @param {Object|undefined} fields - the root fields selected in the query
	 * @param {Boolean|undefined} init - if we are being created part of a query result
	 */
function scopePaths(array,fields,init){if(!init||!fields)return void 0;for(var hasKeys,key,path=array.path+".",keys=Object.keys(fields),i=keys.length,selected={};i--;)key=keys[i],0===key.indexOf(path)&&(hasKeys||(hasKeys=!0),selected[key.substring(path.length)]=fields[key]);return hasKeys&&selected||void 0}/*!
	 * Module dependencies.
	 */
var SchemaType=__webpack_require__(/*! ../schematype */3),ArrayType=__webpack_require__(/*! ./array */33),StorageDocumentArray=__webpack_require__(/*! ../types/documentarray */18),Subdocument=__webpack_require__(/*! ../types/embedded */19),Document=__webpack_require__(/*! ../document */5),oid=__webpack_require__(/*! ../types/objectid */16),utils=__webpack_require__(/*! ../utils */6);/*!
	 * Inherits from ArrayType.
	 */
DocumentArray.prototype=Object.create(ArrayType.prototype),DocumentArray.prototype.constructor=DocumentArray,DocumentArray.prototype.doValidate=function(array,fn,scope){var self=this;SchemaType.prototype.doValidate.call(this,array,function(err){if(err)return fn(err);var error,count=array&&array.length;if(!count)return fn();for(var i=0,len=count;len>i;++i){var doc=array[i];doc?!function(i){doc.validate(function(err){return err&&!error?(err.key=self.key+"."+i+"."+err.key,fn(error=err)):void(--count||fn())})}(i):--count||fn()}},scope)},DocumentArray.prototype.cast=function(value,doc,init,prev){var selected,subdoc,i;if(!Array.isArray(value))return this.cast([value],doc,init,prev);if(prev&&approximatelyEqual(value,prev))return prev;if(!value.isStorageDocumentArray&&(value=new StorageDocumentArray(value,this.path,doc),prev&&prev._handlers))for(var key in prev._handlers)doc.off(key,prev._handlers[key]);for(i=value.length;i--;)if(!(value[i]instanceof Subdocument)&&value[i])if(init)selected||(selected=scopePaths(this,doc.$__.selected,init)),subdoc=new this.casterConstructor(null,value,!0,selected),value[i]=subdoc.init(value[i]);else{try{subdoc=prev.id(value[i]._id)}catch(e){}prev&&subdoc?subdoc.set(value[i]):(subdoc=new this.casterConstructor(value[i],value),restorePopulatedFields(subdoc,this.schema.tree,value[i],prev)),value[i]=subdoc}return value},/*!
	 * Module exports.
	 */
module.exports=DocumentArray},/*!*****************************!*\
  !*** ./lib/schema/array.js ***!
  \*****************************/
function(module,exports,__webpack_require__){"use strict";function SchemaArray(key,cast,options){if(cast){var castOptions={};"Object"===utils.getFunctionName(cast.constructor)&&(cast.type?(castOptions=_.clone(cast),delete castOptions.type,cast=cast.type):cast=Mixed);var name="string"==typeof cast?cast:utils.getFunctionName(cast),Caster=name in Types?Types[name]:cast;this.casterConstructor=Caster,this.caster=new Caster(null,castOptions),EmbeddedDoc||(EmbeddedDoc=__webpack_require__(/*! ../types/embedded */19)),this.caster instanceof EmbeddedDoc||(this.caster.path=key)}SchemaType.call(this,key,options);var defaultArr,fn,self=this;this.defaultValue&&(defaultArr=this.defaultValue,fn="function"==typeof defaultArr),this["default"](function(){var arr=fn?defaultArr():defaultArr||[];return new StorageArray(arr,self.path,this)})}/*!
	 * Module dependencies.
	 */
var EmbeddedDoc,SchemaType=__webpack_require__(/*! ../schematype */3),CastError=SchemaType.CastError,Types={Boolean:__webpack_require__(/*! ./boolean */31),Date:__webpack_require__(/*! ./date */35),Number:__webpack_require__(/*! ./number */30),String:__webpack_require__(/*! ./string */29),ObjectId:__webpack_require__(/*! ./objectid */36),Buffer:__webpack_require__(/*! ./buffer */34)},StorageArray=__webpack_require__(/*! ../types/array */26),Mixed=__webpack_require__(/*! ./mixed */15),utils=__webpack_require__(/*! ../utils */6);/*!
	 * Inherits from SchemaType.
	 */
SchemaArray.prototype=Object.create(SchemaType.prototype),SchemaArray.prototype.constructor=SchemaArray,SchemaArray.prototype.checkRequired=function(value){return!(!value||!value.length)},SchemaArray.prototype.applyGetters=function(value,scope){return this.caster.options&&this.caster.options.ref?value:SchemaType.prototype.applyGetters.call(this,value,scope)},SchemaArray.prototype.cast=function(value,doc,init){if(Array.isArray(value)){if(value.isStorageArray||(value=new StorageArray(value,this.path,doc)),this.caster)try{for(var i=0,l=value.length;l>i;i++)value[i]=this.caster.cast(value[i],doc,init)}catch(e){throw new CastError(e.type,value,this.path)}return value}return this.cast([value],doc,init)},/*!
	 * Module exports.
	 */
module.exports=SchemaArray},/*!******************************!*\
  !*** ./lib/schema/buffer.js ***!
  \******************************/
function(module,exports,__webpack_require__){(function(Buffer){"use strict";function SchemaBuffer(key,options){SchemaType.call(this,key,options,"Buffer")}/*!
	 * Module dependencies.
	 */
var Document,SchemaType=__webpack_require__(/*! ../schematype */3),CastError=SchemaType.CastError,StorageBuffer=__webpack_require__(/*! ../types */11).Buffer,Binary=StorageBuffer.Binary;/*!
	 * Inherits from SchemaType.
	 */
SchemaBuffer.prototype=Object.create(SchemaType.prototype),SchemaBuffer.prototype.constructor=SchemaBuffer,SchemaBuffer.prototype.checkRequired=function(value,doc){return SchemaType._isRef(this,value,doc,!0)?null!=value:!(!value||!value.length)},SchemaBuffer.prototype.cast=function(value,doc,init){var ret;if(SchemaType._isRef(this,value,doc,init)){if(null==value)return value;if(Document||(Document=__webpack_require__(/*! ./../document */5)),value instanceof Document)return value.$__.wasPopulated=!0,value;if(Buffer.isBuffer(value))return value;if(!_.isObject(value))throw new CastError("buffer",value,this.path);var path=doc.$__fullPath(this.path),owner=doc.ownerDocument?doc.ownerDocument():doc,pop=owner.populated(path,!0);return ret=new pop.options.model(value),ret.$__.wasPopulated=!0,ret}if(value&&value._id&&(value=value._id),Buffer.isBuffer(value))return value&&value.isStorageBuffer||(value=new StorageBuffer(value,[this.path,doc])),value;if(value instanceof Binary)return ret=new StorageBuffer(value.value(!0),[this.path,doc]),ret.subtype(value.sub_type),ret;if(null===value)return value;var type=typeof value;if("string"===type||"number"===type||Array.isArray(value))return ret=new StorageBuffer(value,[this.path,doc]);throw new CastError("buffer",value,this.path)},/*!
	 * Module exports.
	 */
module.exports=SchemaBuffer}).call(exports,__webpack_require__(/*! (webpack)/~/node-libs-browser/~/buffer/index.js */12).Buffer)},/*!****************************!*\
  !*** ./lib/schema/date.js ***!
  \****************************/
function(module,exports,__webpack_require__){"use strict";function DateSchema(key,options){SchemaType.call(this,key,options)}/*!
	 * Module requirements.
	 */
var SchemaType=__webpack_require__(/*! ../schematype */3),CastError=SchemaType.CastError;/*!
	 * Inherits from SchemaType.
	 */
DateSchema.prototype=Object.create(SchemaType.prototype),DateSchema.prototype.constructor=DateSchema,DateSchema.prototype.checkRequired=function(value){return value instanceof Date},DateSchema.prototype.cast=function(value){if(null===value||""===value)return null;if(value instanceof Date)return value;var date;if(value instanceof Number||"number"==typeof value||String(value)==Number(value)?date=new Date(Number(value)):value.toString&&(date=new Date(value.toString())),"Invalid Date"!=date.toString())return date;throw new CastError("date",value,this.path)},/*!
	 * Module exports.
	 */
module.exports=DateSchema},/*!********************************!*\
  !*** ./lib/schema/objectid.js ***!
  \********************************/
function(module,exports,__webpack_require__){"use strict";function ObjectId(key,options){SchemaType.call(this,key,options,"ObjectId")}/*!
	 * ignore
	 */
function defaultId(){return new oid}function resetId(v){return this.$__._id=null,v}/*!
	 * Module dependencies.
	 */
var Document,SchemaType=__webpack_require__(/*! ../schematype */3),CastError=SchemaType.CastError,oid=__webpack_require__(/*! ../types/objectid */16);/*!
	 * Inherits from SchemaType.
	 */
ObjectId.prototype=Object.create(SchemaType.prototype),ObjectId.prototype.constructor=ObjectId,ObjectId.prototype.auto=function(turnOn){return turnOn&&(this["default"](defaultId),this.set(resetId)),this},ObjectId.prototype.checkRequired=function(value){return SchemaType._isRef(this,value)?null!=value:value instanceof oid},ObjectId.prototype.cast=function(value,doc,init,priorVal){if(Document||(Document=__webpack_require__(/*! ./../document */5)),SchemaType._isRef(this,value)){if(null==value)return value;if(value instanceof Document)return value.$__.wasPopulated=!0,value;if(value instanceof oid)return value;if(!_.isPlainObject(value))throw new CastError("ObjectId",value,this.path);var schema=this.options.ref;if(!schema)throw new TypeError("При ссылке (ref) на документ нужно указывать схему, по которой этот документ создавать");if(!storage.schemas[schema])throw new TypeError('При ссылке (ref) на документ нужно указывать название схемы на которую ссылаемся при её создании ( new Schema("name", schemaObject) )');return doc=new Document(value,void 0,storage.schemas[schema],void 0,!0),doc.$__.wasPopulated=!0,doc}if(null===value)return value;if(priorVal instanceof Document&&priorVal._id&&priorVal._id.equals(value))return priorVal;if(value instanceof oid)return value;if(value._id&&value._id instanceof oid)return value._id;if(value.toString)try{return oid.createFromHexString(value.toString())}catch(err){throw new CastError("ObjectId",value,this.path)}throw new CastError("ObjectId",value,this.path)},/*!
	 * Module exports.
	 */
module.exports=ObjectId},/*!*****************************!*\
  !*** ./lib/binaryparser.js ***!
  \*****************************/
function(module,exports,__webpack_require__){"use strict";function BinaryParser(bigEndian,allowExceptions){return this instanceof BinaryParser?(this.bigEndian=bigEndian,void(this.allowExceptions=allowExceptions)):new BinaryParser(bigEndian,allowExceptions)}/*!
	 * @constructor BinaryParser buffer constructor.
	 */
function BinaryParserBuffer(bigEndian,buffer){this.bigEndian=bigEndian||0,this.buffer=[],this.setBuffer(buffer)}for(var maxBits=[],i=0;64>i;i++)maxBits[i]=Math.pow(2,i);BinaryParser.warn=function(msg){if(this.allowExceptions)throw new Error(msg);return 1},BinaryParser.decodeInt=function(data,bits,signed,forceBigEndian){var b=new this.Buffer(this.bigEndian||forceBigEndian,data),x=b.readBits(0,bits),max=maxBits[bits];return signed&&x>=max/2?x-max:x},BinaryParser.encodeInt=function(data,bits,signed,forceBigEndian){var max=maxBits[bits];(data>=max||-(max/2)>data)&&(this.warn("encodeInt::overflow"),data=0),0>data&&(data+=max);for(var r=[];data;r[r.length]=String.fromCharCode(data%256),data=Math.floor(data/256));for(bits=-(-bits>>3)-r.length;bits--;r[r.length]="\x00");return(this.bigEndian||forceBigEndian?r.reverse():r).join("")},BinaryParser.toSmall=function(data){return this.decodeInt(data,8,!0)},BinaryParser.fromSmall=function(data){return this.encodeInt(data,8,!0)},BinaryParser.toByte=function(data){return this.decodeInt(data,8,!1)},BinaryParser.fromByte=function(data){return this.encodeInt(data,8,!1)},BinaryParser.toShort=function(data){return this.decodeInt(data,16,!0)},BinaryParser.fromShort=function(data){return this.encodeInt(data,16,!0)},BinaryParser.toWord=function(data){return this.decodeInt(data,16,!1)},BinaryParser.fromWord=function(data){return this.encodeInt(data,16,!1)},BinaryParser.toInt=function(data){return this.decodeInt(data,32,!0)},BinaryParser.fromInt=function(data){return this.encodeInt(data,32,!0)},BinaryParser.toLong=function(data){return this.decodeInt(data,64,!0)},BinaryParser.fromLong=function(data){return this.encodeInt(data,64,!0)},BinaryParser.toDWord=function(data){return this.decodeInt(data,32,!1)},BinaryParser.fromDWord=function(data){return this.encodeInt(data,32,!1)},BinaryParser.toQWord=function(data){return this.decodeInt(data,64,!0)},BinaryParser.fromQWord=function(data){return this.encodeInt(data,64,!0)},BinaryParserBuffer.prototype.setBuffer=function(data){var l,i,b;if(data){for(i=l=data.length,b=this.buffer=new Array(l);i;b[l-i]=data.charCodeAt(--i));this.bigEndian&&b.reverse()}},BinaryParserBuffer.prototype.hasNeededBits=function(neededBits){return this.buffer.length>=-(-neededBits>>3)},BinaryParserBuffer.prototype.checkBuffer=function(neededBits){if(!this.hasNeededBits(neededBits))throw new Error("checkBuffer::missing bytes")},BinaryParserBuffer.prototype.readBits=function(start,length){function shl(a,b){for(;b--;a=1073741824==(1073741824&(a%=2147483648))?2*a:2*(a-1073741824)+2147483647+1);return a}if(0>start||0>=length)return 0;this.checkBuffer(start+length);for(var offsetLeft,offsetRight=start%8,curByte=this.buffer.length-(start>>3)-1,lastByte=this.buffer.length+(-(start+length)>>3),diff=curByte-lastByte,sum=(this.buffer[curByte]>>offsetRight&(1<<(diff?8-offsetRight:length))-1)+(diff&&(offsetLeft=(start+length)%8)?(this.buffer[lastByte++]&(1<<offsetLeft)-1)<<(diff--<<3)-offsetRight:0);diff;sum+=shl(this.buffer[lastByte++],(diff--<<3)-offsetRight));return sum},/*!
	 * Module exports.
	 */
BinaryParser.Buffer=BinaryParserBuffer,exports.BinaryParser=BinaryParser},/*!***********************!*\
  !*** ./lib/binary.js ***!
  \***********************/
function(module,exports,__webpack_require__){(function(Buffer){"use strict";function Binary(buffer,subType){if(!(this instanceof Binary))return new Binary(buffer,subType);if(this._bsontype="Binary",buffer instanceof Number?(this.sub_type=buffer,this.position=0):(this.sub_type=null==subType?BSON_BINARY_SUBTYPE_DEFAULT:subType,this.position=0),null==buffer||buffer instanceof Number)this.buffer="undefined"!=typeof Buffer?new Buffer(Binary.BUFFER_SIZE):"undefined"!=typeof Uint8Array?new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE)):new Array(Binary.BUFFER_SIZE),this.position=0;else{if("string"==typeof buffer)if("undefined"!=typeof Buffer)this.buffer=new Buffer(buffer);else{if("undefined"==typeof Uint8Array&&"[object Array]"!==Object.prototype.toString.call(buffer))throw new Error("only String, Buffer, Uint8Array or Array accepted");this.buffer=writeStringToArray(buffer)}else this.buffer=buffer;this.position=buffer.length}}Binary.prototype.put=function(byte_value){if(null!=byte_value.length&&"number"!=typeof byte_value&&1!=byte_value.length)throw new Error("only accepts single character String, Uint8Array or Array");if("number"!=typeof byte_value&&0>byte_value||byte_value>255)throw new Error("only accepts number in a valid unsigned byte range 0-255");var decoded_byte=null;if(decoded_byte="string"==typeof byte_value?byte_value.charCodeAt(0):null!=byte_value.length?byte_value[0]:byte_value,this.buffer.length>this.position)this.buffer[this.position++]=decoded_byte;else if("undefined"!=typeof Buffer&&Buffer.isBuffer(this.buffer)){var buffer=new Buffer(Binary.BUFFER_SIZE+this.buffer.length);this.buffer.copy(buffer,0,0,this.buffer.length),this.buffer=buffer,this.buffer[this.position++]=decoded_byte}else{var buffer=null;buffer="[object Uint8Array]"===Object.prototype.toString.call(this.buffer)?new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE+this.buffer.length)):new Array(Binary.BUFFER_SIZE+this.buffer.length);for(var i=0;i<this.buffer.length;i++)buffer[i]=this.buffer[i];this.buffer=buffer,this.buffer[this.position++]=decoded_byte}},Binary.prototype.write=function(string,offset){if(offset="number"==typeof offset?offset:this.position,this.buffer.length<offset+string.length){var buffer=null;if("undefined"!=typeof Buffer&&Buffer.isBuffer(this.buffer))buffer=new Buffer(this.buffer.length+string.length),this.buffer.copy(buffer,0,0,this.buffer.length);else if("[object Uint8Array]"===Object.prototype.toString.call(this.buffer)){buffer=new Uint8Array(new ArrayBuffer(this.buffer.length+string.length));for(var i=0;i<this.position;i++)buffer[i]=this.buffer[i]}this.buffer=buffer}if("undefined"!=typeof Buffer&&Buffer.isBuffer(string)&&Buffer.isBuffer(this.buffer))string.copy(this.buffer,offset,0,string.length),this.position=offset+string.length>this.position?offset+string.length:this.position;else if("undefined"!=typeof Buffer&&"string"==typeof string&&Buffer.isBuffer(this.buffer))this.buffer.write(string,"binary",offset),this.position=offset+string.length>this.position?offset+string.length:this.position;else if("[object Uint8Array]"===Object.prototype.toString.call(string)||"[object Array]"===Object.prototype.toString.call(string)&&"string"!=typeof string){for(var i=0;i<string.length;i++)this.buffer[offset++]=string[i];this.position=offset>this.position?offset:this.position}else if("string"==typeof string){for(var i=0;i<string.length;i++)this.buffer[offset++]=string.charCodeAt(i);this.position=offset>this.position?offset:this.position}},Binary.prototype.read=function(position,length){if(length=length&&length>0?length:this.position,this.buffer.slice)return this.buffer.slice(position,position+length);for(var buffer="undefined"!=typeof Uint8Array?new Uint8Array(new ArrayBuffer(length)):new Array(length),i=0;length>i;i++)buffer[i]=this.buffer[position++];return buffer},Binary.prototype.value=function(asRaw){if(asRaw=null==asRaw?!1:asRaw,asRaw&&"undefined"!=typeof Buffer&&Buffer.isBuffer(this.buffer)&&this.buffer.length==this.position)return this.buffer;if("undefined"!=typeof Buffer&&Buffer.isBuffer(this.buffer))return asRaw?this.buffer.slice(0,this.position):this.buffer.toString("binary",0,this.position);if(asRaw){if(null!=this.buffer.slice)return this.buffer.slice(0,this.position);for(var newBuffer="[object Uint8Array]"===Object.prototype.toString.call(this.buffer)?new Uint8Array(new ArrayBuffer(this.position)):new Array(this.position),i=0;i<this.position;i++)newBuffer[i]=this.buffer[i];return newBuffer}return convertArraytoUtf8BinaryString(this.buffer,0,this.position)},Binary.prototype.length=function(){return this.position},Binary.prototype.toJSON=function(){return null!=this.buffer?this.buffer.toString("base64"):""},Binary.prototype.toString=function(format){return null!=this.buffer?this.buffer.slice(0,this.position).toString(format):""};var BSON_BINARY_SUBTYPE_DEFAULT=0,writeStringToArray=function(data){for(var buffer="undefined"!=typeof Uint8Array?new Uint8Array(new ArrayBuffer(data.length)):new Array(data.length),i=0;i<data.length;i++)buffer[i]=data.charCodeAt(i);return buffer},convertArraytoUtf8BinaryString=function(byteArray,startIndex,endIndex){for(var result="",i=startIndex;endIndex>i;i++)result+=String.fromCharCode(byteArray[i]);return result};Binary.BUFFER_SIZE=256,/*!
	 * Default BSON type
	 *
	 * @const SUBTYPE_DEFAULT
	 **/
Binary.SUBTYPE_DEFAULT=0,/*!
	 * Function BSON type
	 *
	 * @const SUBTYPE_DEFAULT
	 **/
Binary.SUBTYPE_FUNCTION=1,/*!
	 * Byte Array BSON type
	 *
	 * @const SUBTYPE_DEFAULT
	 **/
Binary.SUBTYPE_BYTE_ARRAY=2,/*!
	 * OLD UUID BSON type
	 *
	 * @const SUBTYPE_DEFAULT
	 **/
Binary.SUBTYPE_UUID_OLD=3,/*!
	 * UUID BSON type
	 *
	 * @const SUBTYPE_DEFAULT
	 **/
Binary.SUBTYPE_UUID=4,/*!
	 * MD5 BSON type
	 *
	 * @const SUBTYPE_DEFAULT
	 **/
Binary.SUBTYPE_MD5=5,/*!
	 * User BSON type
	 *
	 * @const SUBTYPE_DEFAULT
	 **/
Binary.SUBTYPE_USER_DEFINED=128,/*!
	 * Module exports.
	 */
module.exports=Binary,module.exports.Binary=Binary}).call(exports,__webpack_require__(/*! (webpack)/~/node-libs-browser/~/buffer/index.js */12).Buffer)},/*!*****************************************************************!*\
  !*** (webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js ***!
  \*****************************************************************/
function(module,exports,__webpack_require__){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,nBits=-7,i=isLE?nBytes-1:0,d=isLE?-1:1,s=buffer[offset+i];for(i+=d,e=s&(1<<-nBits)-1,s>>=-nBits,nBits+=eLen;nBits>0;e=256*e+buffer[offset+i],i+=d,nBits-=8);for(m=e&(1<<-nBits)-1,e>>=-nBits,nBits+=mLen;nBits>0;m=256*m+buffer[offset+i],i+=d,nBits-=8);if(0===e)e=1-eBias;else{if(e===eMax)return m?0/0:(s?-1:1)*(1/0);m+=Math.pow(2,mLen),e-=eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)},exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,rt=23===mLen?Math.pow(2,-24)-Math.pow(2,-77):0,i=isLE?0:nBytes-1,d=isLE?1:-1,s=0>value||0===value&&0>1/value?1:0;for(value=Math.abs(value),isNaN(value)||value===1/0?(m=isNaN(value)?1:0,e=eMax):(e=Math.floor(Math.log(value)/Math.LN2),value*(c=Math.pow(2,-e))<1&&(e--,c*=2),value+=e+eBias>=1?rt/c:rt*Math.pow(2,1-eBias),value*c>=2&&(e++,c/=2),e+eBias>=eMax?(m=0,e=eMax):e+eBias>=1?(m=(value*c-1)*Math.pow(2,mLen),e+=eBias):(m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen),e=0));mLen>=8;buffer[offset+i]=255&m,i+=d,m/=256,mLen-=8);for(e=e<<mLen|m,eLen+=mLen;eLen>0;buffer[offset+i]=255&e,i+=d,e/=256,eLen-=8);buffer[offset+i-d]|=128*s}},/*!******************************************************************!*\
  !*** (webpack)/~/node-libs-browser/~/buffer/~/is-array/index.js ***!
  \******************************************************************/
function(module,exports,__webpack_require__){var isArray=Array.isArray,str=Object.prototype.toString;module.exports=isArray||function(val){return!!val&&"[object Array]"==str.call(val)}},/*!*********************************************************************!*\
  !*** (webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js ***!
  \*********************************************************************/
function(module,exports,__webpack_require__){var lookup="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";!function(exports){"use strict";function decode(elt){var code=elt.charCodeAt(0);return code===PLUS||code===PLUS_URL_SAFE?62:code===SLASH||code===SLASH_URL_SAFE?63:NUMBER>code?-1:NUMBER+10>code?code-NUMBER+26+26:UPPER+26>code?code-UPPER:LOWER+26>code?code-LOWER+26:void 0}function b64ToByteArray(b64){function push(v){arr[L++]=v}var i,j,l,tmp,placeHolders,arr;if(b64.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var len=b64.length;placeHolders="="===b64.charAt(len-2)?2:"="===b64.charAt(len-1)?1:0,arr=new Arr(3*b64.length/4-placeHolders),l=placeHolders>0?b64.length-4:b64.length;var L=0;for(i=0,j=0;l>i;i+=4,j+=3)tmp=decode(b64.charAt(i))<<18|decode(b64.charAt(i+1))<<12|decode(b64.charAt(i+2))<<6|decode(b64.charAt(i+3)),push((16711680&tmp)>>16),push((65280&tmp)>>8),push(255&tmp);return 2===placeHolders?(tmp=decode(b64.charAt(i))<<2|decode(b64.charAt(i+1))>>4,push(255&tmp)):1===placeHolders&&(tmp=decode(b64.charAt(i))<<10|decode(b64.charAt(i+1))<<4|decode(b64.charAt(i+2))>>2,push(tmp>>8&255),push(255&tmp)),arr}function uint8ToBase64(uint8){function encode(num){return lookup.charAt(num)}function tripletToBase64(num){return encode(num>>18&63)+encode(num>>12&63)+encode(num>>6&63)+encode(63&num)}var i,temp,length,extraBytes=uint8.length%3,output="";for(i=0,length=uint8.length-extraBytes;length>i;i+=3)temp=(uint8[i]<<16)+(uint8[i+1]<<8)+uint8[i+2],output+=tripletToBase64(temp);switch(extraBytes){case 1:temp=uint8[uint8.length-1],output+=encode(temp>>2),output+=encode(temp<<4&63),output+="==";break;case 2:temp=(uint8[uint8.length-2]<<8)+uint8[uint8.length-1],output+=encode(temp>>10),output+=encode(temp>>4&63),output+=encode(temp<<2&63),output+="="}return output}var Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,PLUS="+".charCodeAt(0),SLASH="/".charCodeAt(0),NUMBER="0".charCodeAt(0),LOWER="a".charCodeAt(0),UPPER="A".charCodeAt(0),PLUS_URL_SAFE="-".charCodeAt(0),SLASH_URL_SAFE="_".charCodeAt(0);exports.toByteArray=b64ToByteArray,exports.fromByteArray=uint8ToBase64}(exports)}])});
//# sourceMappingURL=data:application/json;base64,